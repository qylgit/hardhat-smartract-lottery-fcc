{"id":"90ea494a2a05783c99f164555df87d89","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/Raffle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\n\nerror Raffle__UpkeepNotNeeded(uint256 currentBalance, uint256 numPlayers, uint256 raffleState);\nerror Raffle_NotEnoughETHnetered();\nerror Raffle_TransferFailed();\nerror Raffle_NotOpen();\n\n// 进入彩票竞选 （支付一些金额）\n// 随机一名优胜者\n// 智能合约 最少维护\n/***\n * @notice 本合约旨在创建一个不可篡改的去中心化智能合约\n * @dev 实现了 chainlink VRF v2 以及 chainlink keepers\n */\ncontract Raffle is VRFConsumerBaseV2, AutomationCompatible {\n    /**\n     * @dev\n     */\n    enum RaffleState {\n        OPEN,\n        CALCULATING,\n        CLOSED\n    }\n\n    //最低价格\n    uint256 private immutable i_entranceFee;\n    //玩家\n    address payable[] private s_players;\n\n    address private s_recentWinter;\n    //喂价\n    VRFCoordinatorV2Interface i_vrfCoordinator;\n    //最大gas费\n    bytes32 private immutable i_gasLane;\n    uint64 private immutable s_subscriptionId;\n    uint32 private immutable i_callbackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant NUM_WORDS = 1;\n\n    // 合约奖池状态\n    uint256 private s_state;\n    RaffleState private s_raffleState;\n    //最新block时间\n    uint256 private s_lastTimeStamp;\n    // 每次奖金领取时间间隔\n    uint256 private immutable i_interval;\n\n    //事件 命名与函数相反\n    event RaffleEnter(address indexed player);\n    event RandowWinnerPick(uint256 indexed requestId);\n    event RandomWordsFulfill(address indexed winner);\n\n    constructor(\n        address vrfCoordinatorV2, // 合约地址\n        uint256 entranceFee,\n        bytes32 gasLane,\n        uint64 subscriptionId,\n        uint32 callbackGasLimit,\n        uint256 interval\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) {\n        i_entranceFee = entranceFee;\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_gasLane = gasLane;\n        s_subscriptionId = subscriptionId;\n        i_callbackGasLimit = callbackGasLimit;\n        s_raffleState = RaffleState.OPEN;\n        s_lastTimeStamp = block.timestamp;\n        i_interval = interval;\n    }\n\n    function enterRaffle() public payable {\n        // 钱包余额必须大于最低设定值\n        if (msg.value < i_entranceFee) {\n            revert Raffle_NotEnoughETHnetered();\n        }\n        if (s_raffleState != RaffleState.OPEN) {\n            revert Raffle_NotOpen();\n        }\n        s_players.push(payable(msg.sender));\n        //触发合约事件\n        emit RaffleEnter(msg.sender);\n    }\n\n    //获取随机赢家\n    // external 外部函数可以从合约外部调用，但不能从合约内部调用或者被其他合约继承。\n    function performUpkeep(bytes calldata /* performData */) external override {\n        //请求随机数\n        // chainlink VRF\n        (bool upkeepNeeded, ) = checkUpkeep(\"\");\n        if (!upkeepNeeded) {\n            revert Raffle__UpkeepNotNeeded(\n                address(this).balance,\n                s_players.length,\n                uint256(s_raffleState)\n            );\n        }\n        s_raffleState = RaffleState.CALCULATING;\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\n            i_gasLane,\n            s_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS\n        );\n        //触发事件\n        emit RandowWinnerPick(requestId);\n    }\n\n    // 从 chainlink 获取随机数并返回\n    // internal：只能从当前合约内部或继承的合约中访问。\n    function fulfillRandomWords(\n        uint256 /*requestId*/,\n        uint256[] memory randomWords\n    ) internal override {\n        //从参加用户数据获取随机值\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\n        address payable recentWinter = s_players[indexOfWinner];\n        s_recentWinter = recentWinter;\n        s_raffleState = RaffleState.OPEN;\n        s_players = new address payable[](0);\n        //获取游戏赢家后进行转账交易\n        (bool success, ) = recentWinter.call{value: address(this).balance}(\"\");\n        //判断交易是否成功\n        if (!success) {\n            revert Raffle_TransferFailed();\n        }\n        //触发事件\n        emit RandomWordsFulfill(s_recentWinter);\n    }\n\n    /**\n     * @dev 正确使用到 chainlink 维护合约定时任务-- 是否触发优胜者\n     * 1 : 时间间隔处理方式\n     * 2 ：合约系统中至少有一位玩家并且有 eth\n     * 3 ： 订阅中注入了 link资金\n     * 4 ： 我们合约奖池应该是处于开启状态\n     */\n    function checkUpkeep(\n        bytes memory /* checkData */\n    ) public view override returns (bool upkeepNeeded, bytes memory /* performData */) {\n        // We don't use the checkData in this example. The checkData is defined when the Upkeep was registered.\n        bool isOpen = (RaffleState.OPEN == s_raffleState);\n        bool timePassed = (block.timestamp - s_lastTimeStamp) > i_interval;\n        bool hasPlayers = (s_players.length > 0);\n        bool hasBalane = address(this).balance > 0;\n        upkeepNeeded = (isOpen && timePassed && hasBalane && hasPlayers);\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        return i_entranceFee;\n    }\n\n    function getPlayer(uint256 index) public view returns (address) {\n        return s_players[index];\n    }\n\n    function getRecentWinter() public view returns (address) {\n        return s_recentWinter;\n    }\n\n    function getRaffleState() public view returns (RaffleState) {\n        return s_raffleState;\n    }\n\n    // 常量读取 用 prue关键字\n    function getNumWords() public pure returns (uint32) {\n        return NUM_WORDS;\n    }\n\n    function getRequestConfirmatison() public pure returns (uint256) {\n        return REQUEST_CONFIRMATIONS;\n    }\n\n    function getNumberOfPlayers() public view returns (uint256) {\n        return s_players.length;\n    }\n\n    function getLastTimeStamp() public view returns (uint256) {\n        return s_lastTimeStamp;\n    }\n\n    function getInterval() public view returns (uint256) {\n        return i_interval;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/Raffle.sol:145:56:\n    |\n145 |     ) public view override returns (bool upkeepNeeded, bytes memory /* performData */) {\n    |                                                        ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":4988,"file":"contracts/Raffle.sol","start":4976},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","exportedSymbols":{"AutomationBase":[37]},"id":38,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":37,"linearizedBaseContracts":[37],"name":"AutomationBase","nameLocation":"66:14:0","nodeType":"ContractDefinition","nodes":[{"id":3,"name":"OnlySimulatedBackend","nameLocation":"91:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"111:2:0"},"src":"85:29:0"},{"body":{"id":27,"nodeType":"Block","src":"291:200:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"350:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"350:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"363:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"363:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"350:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":14,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"377:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"377:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307831313131313131313131313131313131313131313131313131313131313131313131313131313131","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"398:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1111111111111111111111111111111111111111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"390:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:0","typeDescriptions":{}}},"id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"390:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"377:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"350:91:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26,"nodeType":"IfStatement","src":"346:141:0","trueBody":{"id":25,"nodeType":"Block","src":"443:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"458:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"458:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"RevertStatement","src":"451:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"118:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":28,"implemented":true,"kind":"function","modifiers":[],"name":"_preventExecution","nameLocation":"257:17:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"274:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"291:0:0"},"scope":37,"src":"248:243:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":35,"nodeType":"Block","src":"652:37:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":31,"name":"_preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"658:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"658:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"ExpressionStatement","src":"658:19:0"},{"id":34,"nodeType":"PlaceholderStatement","src":"683:1:0"}]},"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"495:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":36,"name":"cannotExecute","nameLocation":"636:13:0","nodeType":"ModifierDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"649:2:0"},"src":"627:62:0","virtual":false,"visibility":"internal"}],"scope":38,"src":"57:634:0","usedErrors":[3]}],"src":"32:660:0"},"id":0},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","exportedSymbols":{"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":39,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":41,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":38,"src":"57:52:1","symbolAliases":[{"foreign":{"id":40,"name":"AutomationBase","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":68,"src":"110:93:1","symbolAliases":[{"foreign":{"id":42,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"src":"118:29:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":44,"name":"AutomationBase","nodeType":"IdentifierPath","referencedDeclaration":37,"src":"247:14:1"},"id":45,"nodeType":"InheritanceSpecifier","src":"247:14:1"},{"baseName":{"id":46,"name":"AutomationCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":67,"src":"263:29:1"},"id":47,"nodeType":"InheritanceSpecifier","src":"263:29:1"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":48,"linearizedBaseContracts":[48,67,37],"name":"AutomationCompatible","nameLocation":"223:20:1","nodeType":"ContractDefinition","nodes":[],"scope":49,"src":"205:90:1","usedErrors":[3]}],"src":"32:264:1"},"id":1},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[67]},"id":68,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":67,"linearizedBaseContracts":[67],"name":"AutomationCompatibleInterface","nameLocation":"67:29:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"101:985:2","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1098:11:2","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"checkData","nameLocation":"1125:9:2","nodeType":"VariableDeclaration","scope":60,"src":"1110:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"1110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1109:26:2"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1159:12:2","nodeType":"VariableDeclaration","scope":60,"src":"1154:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"1154:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"performData","nameLocation":"1186:11:2","nodeType":"VariableDeclaration","scope":60,"src":"1173:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":57,"name":"bytes","nodeType":"ElementaryTypeName","src":"1173:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1153:45:2"},"scope":67,"src":"1089:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1203:1003:2","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2218:13:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"performData","nameLocation":"2247:11:2","nodeType":"VariableDeclaration","scope":66,"src":"2232:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62,"name":"bytes","nodeType":"ElementaryTypeName","src":"2232:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2231:28:2"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"2268:0:2"},"scope":67,"src":"2209:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":68,"src":"57:2214:2","usedErrors":[]}],"src":"32:2240:2"},"id":2},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[125]},"id":126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":69,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"57:5275:3","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":125,"linearizedBaseContracts":[125],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:3","nodeType":"ContractDefinition","nodes":[{"id":76,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:3","nodeType":"ErrorDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"have","nameLocation":"5413:4:3","nodeType":"VariableDeclaration","scope":76,"src":"5405:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"want","nameLocation":"5427:4:3","nodeType":"VariableDeclaration","scope":76,"src":"5419:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:3"},"src":"5373:60:3"},{"constant":false,"id":78,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5546:14:3","nodeType":"VariableDeclaration","scope":125,"src":"5520:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"5520:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":88,"nodeType":"Block","src":"5677:43:3","statements":[{"expression":{"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":84,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"5683:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":85,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"5700:15:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5683:32:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":87,"nodeType":"ExpressionStatement","src":"5683:32:3"}]},"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"5565:72:3","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":89,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5660:15:3","nodeType":"VariableDeclaration","scope":89,"src":"5652:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5651:25:3"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"5677:0:3"},"scope":125,"src":"5640:80:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"5724:686:3","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":98,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6514:18:3","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"requestId","nameLocation":"6541:9:3","nodeType":"VariableDeclaration","scope":98,"src":"6533:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"randomWords","nameLocation":"6569:11:3","nodeType":"VariableDeclaration","scope":98,"src":"6552:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":94,"nodeType":"ArrayTypeName","src":"6552:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6532:49:3"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[],"src":"6598:0:3"},"scope":125,"src":"6505:94:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":123,"nodeType":"Block","src":"6883:167:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6893:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6893:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":108,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"6907:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6893:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":117,"nodeType":"IfStatement","src":"6889:109:3","trueBody":{"id":116,"nodeType":"Block","src":"6923:75:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":111,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6964:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6964:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":113,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"6976:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":110,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"6938:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6938:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":115,"nodeType":"RevertStatement","src":"6931:60:3"}]}},{"expression":{"arguments":[{"id":119,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"7022:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":120,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"7033:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":118,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"7003:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7003:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"ExpressionStatement","src":"7003:42:3"}]},"functionSelector":"1fe543e3","id":124,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6803:21:3","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"requestId","nameLocation":"6833:9:3","nodeType":"VariableDeclaration","scope":124,"src":"6825:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"6825:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"randomWords","nameLocation":"6861:11:3","nodeType":"VariableDeclaration","scope":124,"src":"6844:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":102,"nodeType":"ArrayTypeName","src":"6844:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6824:49:3"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"6883:0:3"},"scope":125,"src":"6794:256:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":126,"src":"5333:1719:3","usedErrors":[76]}],"src":"32:7021:3"},"id":3},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[221]},"id":222,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":127,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":221,"linearizedBaseContracts":[221],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"97:267:4","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":138,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:4","nodeType":"FunctionDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"392:2:4"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":138,"src":"418:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":130,"name":"uint16","nodeType":"ElementaryTypeName","src":"418:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":138,"src":"426:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":132,"name":"uint32","nodeType":"ElementaryTypeName","src":"426:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":138,"src":"434:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":135,"nodeType":"ArrayTypeName","src":"434:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"417:34:4"},"scope":221,"src":"367:85:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"456:1511:4","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":154,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"1979:18:4","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"keyHash","nameLocation":"2011:7:4","nodeType":"VariableDeclaration","scope":154,"src":"2003:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"subId","nameLocation":"2031:5:4","nodeType":"VariableDeclaration","scope":154,"src":"2024:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":142,"name":"uint64","nodeType":"ElementaryTypeName","src":"2024:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2049:27:4","nodeType":"VariableDeclaration","scope":154,"src":"2042:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":144,"name":"uint16","nodeType":"ElementaryTypeName","src":"2042:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2089:16:4","nodeType":"VariableDeclaration","scope":154,"src":"2082:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":146,"name":"uint32","nodeType":"ElementaryTypeName","src":"2082:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"numWords","nameLocation":"2118:8:4","nodeType":"VariableDeclaration","scope":154,"src":"2111:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":148,"name":"uint32","nodeType":"ElementaryTypeName","src":"2111:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1997:133:4"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"requestId","nameLocation":"2157:9:4","nodeType":"VariableDeclaration","scope":154,"src":"2149:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:19:4"},"scope":221,"src":"1970:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"2172:384:4","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":160,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2568:18:4","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[],"src":"2586:2:4"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"subId","nameLocation":"2614:5:4","nodeType":"VariableDeclaration","scope":160,"src":"2607:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":157,"name":"uint64","nodeType":"ElementaryTypeName","src":"2607:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2606:14:4"},"scope":221,"src":"2559:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"2625:381:4","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":175,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3018:15:4","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"subId","nameLocation":"3046:5:4","nodeType":"VariableDeclaration","scope":175,"src":"3039:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":162,"name":"uint64","nodeType":"ElementaryTypeName","src":"3039:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3033:22:4"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"balance","nameLocation":"3086:7:4","nodeType":"VariableDeclaration","scope":175,"src":"3079:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":165,"name":"uint96","nodeType":"ElementaryTypeName","src":"3079:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"reqCount","nameLocation":"3102:8:4","nodeType":"VariableDeclaration","scope":175,"src":"3095:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":167,"name":"uint64","nodeType":"ElementaryTypeName","src":"3095:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"owner","nameLocation":"3120:5:4","nodeType":"VariableDeclaration","scope":175,"src":"3112:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"consumers","nameLocation":"3144:9:4","nodeType":"VariableDeclaration","scope":175,"src":"3127:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":172,"nodeType":"ArrayTypeName","src":"3127:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3078:76:4"},"scope":221,"src":"3009:146:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"3159:164:4","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":183,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3335:32:4","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"subId","nameLocation":"3375:5:4","nodeType":"VariableDeclaration","scope":183,"src":"3368:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":177,"name":"uint64","nodeType":"ElementaryTypeName","src":"3368:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"newOwner","nameLocation":"3390:8:4","nodeType":"VariableDeclaration","scope":183,"src":"3382:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3367:32:4"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"3408:0:4"},"scope":221,"src":"3326:83:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"3413:212:4","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3637:31:4","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"subId","nameLocation":"3676:5:4","nodeType":"VariableDeclaration","scope":189,"src":"3669:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":185,"name":"uint64","nodeType":"ElementaryTypeName","src":"3669:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3668:14:4"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"3691:0:4"},"scope":221,"src":"3628:64:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"3696:170:4","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":197,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3878:11:4","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"subId","nameLocation":"3897:5:4","nodeType":"VariableDeclaration","scope":197,"src":"3890:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":191,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"consumer","nameLocation":"3912:8:4","nodeType":"VariableDeclaration","scope":197,"src":"3904:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3889:32:4"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"3930:0:4"},"scope":221,"src":"3869:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3935:172:4","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":205,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4119:14:4","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"subId","nameLocation":"4141:5:4","nodeType":"VariableDeclaration","scope":205,"src":"4134:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":199,"name":"uint64","nodeType":"ElementaryTypeName","src":"4134:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"consumer","nameLocation":"4156:8:4","nodeType":"VariableDeclaration","scope":205,"src":"4148:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4133:32:4"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"4174:0:4"},"scope":221,"src":"4110:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"4179:140:4","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4331:18:4","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"subId","nameLocation":"4357:5:4","nodeType":"VariableDeclaration","scope":213,"src":"4350:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":207,"name":"uint64","nodeType":"ElementaryTypeName","src":"4350:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"to","nameLocation":"4372:2:4","nodeType":"VariableDeclaration","scope":213,"src":"4364:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4349:26:4"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"4384:0:4"},"scope":221,"src":"4322:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":220,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4690:20:4","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"subId","nameLocation":"4718:5:4","nodeType":"VariableDeclaration","scope":220,"src":"4711:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":214,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:14:4"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"4748:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":217,"name":"bool","nodeType":"ElementaryTypeName","src":"4748:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4747:6:4"},"scope":221,"src":"4681:73:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":222,"src":"57:4699:4","usedErrors":[]}],"src":"32:4725:4"},"id":4},"contracts/Raffle.sol":{"ast":{"absolutePath":"contracts/Raffle.sol","exportedSymbols":{"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67],"Raffle":[638],"Raffle_NotEnoughETHnetered":[236],"Raffle_NotOpen":[240],"Raffle_TransferFailed":[238],"Raffle__UpkeepNotNeeded":[234],"VRFConsumerBaseV2":[125],"VRFCoordinatorV2Interface":[221]},"id":639,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":223,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":639,"sourceUnit":126,"src":"57:65:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","id":225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":639,"sourceUnit":222,"src":"123:84:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","file":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","id":226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":639,"sourceUnit":49,"src":"208:75:5","symbolAliases":[],"unitAlias":""},{"id":234,"name":"Raffle__UpkeepNotNeeded","nameLocation":"291:23:5","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"currentBalance","nameLocation":"323:14:5","nodeType":"VariableDeclaration","scope":234,"src":"315:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"315:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"numPlayers","nameLocation":"347:10:5","nodeType":"VariableDeclaration","scope":234,"src":"339:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"raffleState","nameLocation":"367:11:5","nodeType":"VariableDeclaration","scope":234,"src":"359:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"359:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"314:65:5"},"src":"285:95:5"},{"id":236,"name":"Raffle_NotEnoughETHnetered","nameLocation":"387:26:5","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"413:2:5"},"src":"381:35:5"},{"id":238,"name":"Raffle_TransferFailed","nameLocation":"423:21:5","nodeType":"ErrorDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"444:2:5"},"src":"417:30:5"},{"id":240,"name":"Raffle_NotOpen","nameLocation":"454:14:5","nodeType":"ErrorDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"468:2:5"},"src":"448:23:5"},{"abstract":false,"baseContracts":[{"baseName":{"id":241,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":125,"src":"740:17:5"},"id":242,"nodeType":"InheritanceSpecifier","src":"740:17:5"},{"baseName":{"id":243,"name":"AutomationCompatible","nodeType":"IdentifierPath","referencedDeclaration":48,"src":"759:20:5"},"id":244,"nodeType":"InheritanceSpecifier","src":"759:20:5"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":638,"linearizedBaseContracts":[638,48,67,37,125],"name":"Raffle","nameLocation":"730:6:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Raffle.RaffleState","id":248,"members":[{"id":245,"name":"OPEN","nameLocation":"841:4:5","nodeType":"EnumValue","src":"841:4:5"},{"id":246,"name":"CALCULATING","nameLocation":"855:11:5","nodeType":"EnumValue","src":"855:11:5"},{"id":247,"name":"CLOSED","nameLocation":"876:6:5","nodeType":"EnumValue","src":"876:6:5"}],"name":"RaffleState","nameLocation":"819:11:5","nodeType":"EnumDefinition","src":"814:74:5"},{"constant":false,"id":250,"mutability":"immutable","name":"i_entranceFee","nameLocation":"939:13:5","nodeType":"VariableDeclaration","scope":638,"src":"913:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":253,"mutability":"mutable","name":"s_players","nameLocation":"997:9:5","nodeType":"VariableDeclaration","scope":638,"src":"971:35:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"971:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":252,"nodeType":"ArrayTypeName","src":"971:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":255,"mutability":"mutable","name":"s_recentWinter","nameLocation":"1029:14:5","nodeType":"VariableDeclaration","scope":638,"src":"1013:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"1013:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":258,"mutability":"mutable","name":"i_vrfCoordinator","nameLocation":"1088:16:5","nodeType":"VariableDeclaration","scope":638,"src":"1062:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$221","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":257,"nodeType":"UserDefinedTypeName","pathNode":{"id":256,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":221,"src":"1062:25:5"},"referencedDeclaration":221,"src":"1062:25:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$221","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"immutable","name":"i_gasLane","nameLocation":"1155:9:5","nodeType":"VariableDeclaration","scope":638,"src":"1129:35:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1129:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":262,"mutability":"immutable","name":"s_subscriptionId","nameLocation":"1195:16:5","nodeType":"VariableDeclaration","scope":638,"src":"1170:41:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":261,"name":"uint64","nodeType":"ElementaryTypeName","src":"1170:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":264,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"1242:18:5","nodeType":"VariableDeclaration","scope":638,"src":"1217:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":263,"name":"uint32","nodeType":"ElementaryTypeName","src":"1217:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":267,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"1290:21:5","nodeType":"VariableDeclaration","scope":638,"src":"1266:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":265,"name":"uint16","nodeType":"ElementaryTypeName","src":"1266:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1314:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":270,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1345:9:5","nodeType":"VariableDeclaration","scope":638,"src":"1321:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":268,"name":"uint32","nodeType":"ElementaryTypeName","src":"1321:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1357:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":272,"mutability":"mutable","name":"s_state","nameLocation":"1407:7:5","nodeType":"VariableDeclaration","scope":638,"src":"1391:23:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":275,"mutability":"mutable","name":"s_raffleState","nameLocation":"1440:13:5","nodeType":"VariableDeclaration","scope":638,"src":"1420:33:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"},"typeName":{"id":274,"nodeType":"UserDefinedTypeName","pathNode":{"id":273,"name":"RaffleState","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"1420:11:5"},"referencedDeclaration":248,"src":"1420:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"visibility":"private"},{"constant":false,"id":277,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"1499:15:5","nodeType":"VariableDeclaration","scope":638,"src":"1483:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":279,"mutability":"immutable","name":"i_interval","nameLocation":"1584:10:5","nodeType":"VariableDeclaration","scope":638,"src":"1558:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1558:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"id":283,"name":"RaffleEnter","nameLocation":"1642:11:5","nodeType":"EventDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1670:6:5","nodeType":"VariableDeclaration","scope":283,"src":"1654:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"1654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1653:24:5"},"src":"1636:42:5"},{"anonymous":false,"id":287,"name":"RandowWinnerPick","nameLocation":"1689:16:5","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1722:9:5","nodeType":"VariableDeclaration","scope":287,"src":"1706:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1706:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1705:27:5"},"src":"1683:50:5"},{"anonymous":false,"id":291,"name":"RandomWordsFulfill","nameLocation":"1744:18:5","nodeType":"EventDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1779:6:5","nodeType":"VariableDeclaration","scope":291,"src":"1763:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"1763:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1762:24:5"},"src":"1738:49:5"},{"body":{"id":345,"nodeType":"Block","src":"2041:351:5","statements":[{"expression":{"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":309,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"2051:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":310,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"2067:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2051:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":312,"nodeType":"ExpressionStatement","src":"2051:27:5"},{"expression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":313,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2088:16:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$221","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":315,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2133:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":314,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2107:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$221_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2107:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$221","typeString":"contract VRFCoordinatorV2Interface"}},"src":"2088:62:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$221","typeString":"contract VRFCoordinatorV2Interface"}},"id":318,"nodeType":"ExpressionStatement","src":"2088:62:5"},{"expression":{"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":319,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2160:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":320,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2172:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2160:19:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":322,"nodeType":"ExpressionStatement","src":"2160:19:5"},{"expression":{"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":323,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"2189:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":324,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2208:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2189:33:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":326,"nodeType":"ExpressionStatement","src":"2189:33:5"},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2232:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2253:16:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2232:37:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":330,"nodeType":"ExpressionStatement","src":"2232:37:5"},{"expression":{"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2279:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":332,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2295:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$248_$","typeString":"type(enum Raffle.RaffleState)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":245,"src":"2295:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"src":"2279:32:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"id":335,"nodeType":"ExpressionStatement","src":"2279:32:5"},{"expression":{"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":336,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2321:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":337,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2339:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2339:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2321:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":340,"nodeType":"ExpressionStatement","src":"2321:33:5"},{"expression":{"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":341,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"2364:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":342,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2377:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2364:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":344,"nodeType":"ExpressionStatement","src":"2364:21:5"}]},"id":346,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":306,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2023:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":307,"kind":"baseConstructorSpecifier","modifierName":{"id":305,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":125,"src":"2005:17:5"},"nodeType":"ModifierInvocation","src":"2005:35:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1822:16:5","nodeType":"VariableDeclaration","scope":346,"src":"1814:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"1814:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"entranceFee","nameLocation":"1872:11:5","nodeType":"VariableDeclaration","scope":346,"src":"1864:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"gasLane","nameLocation":"1901:7:5","nodeType":"VariableDeclaration","scope":346,"src":"1893:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1893:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"subscriptionId","nameLocation":"1925:14:5","nodeType":"VariableDeclaration","scope":346,"src":"1918:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":298,"name":"uint64","nodeType":"ElementaryTypeName","src":"1918:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1956:16:5","nodeType":"VariableDeclaration","scope":346,"src":"1949:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":300,"name":"uint32","nodeType":"ElementaryTypeName","src":"1949:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"interval","nameLocation":"1990:8:5","nodeType":"VariableDeclaration","scope":346,"src":"1982:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1804:200:5"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"2041:0:5"},"scope":638,"src":"1793:599:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":382,"nodeType":"Block","src":"2436:366:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":349,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2501:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2501:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":351,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"2513:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":357,"nodeType":"IfStatement","src":"2497:91:5","trueBody":{"id":356,"nodeType":"Block","src":"2528:60:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"Raffle_NotEnoughETHnetered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2549:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2549:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"RevertStatement","src":"2542:35:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":358,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2601:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":359,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2618:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$248_$","typeString":"type(enum Raffle.RaffleState)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":245,"src":"2618:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"src":"2601:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":366,"nodeType":"IfStatement","src":"2597:87:5","trueBody":{"id":365,"nodeType":"Block","src":"2636:48:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":362,"name":"Raffle_NotOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2657:14:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"RevertStatement","src":"2650:23:5"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2716:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2716:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2708:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"2708:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2708:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":367,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2693:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2693:14:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2693:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"ExpressionStatement","src":"2693:35:5"},{"eventCall":{"arguments":[{"expression":{"id":378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2784:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2784:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":377,"name":"RaffleEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2772:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"EmitStatement","src":"2767:28:5"}]},"functionSelector":"2cfcc539","id":383,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffle","nameLocation":"2407:11:5","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"2418:2:5"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[],"src":"2436:0:5"},"scope":638,"src":"2398:404:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[66],"body":{"id":433,"nodeType":"Block","src":"3027:649:5","statements":[{"assignments":[390,null],"declarations":[{"constant":false,"id":390,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"3094:12:5","nodeType":"VariableDeclaration","scope":433,"src":"3089:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":389,"name":"bool","nodeType":"ElementaryTypeName","src":"3089:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":394,"initialValue":{"arguments":[{"hexValue":"","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3124:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":391,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3112:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3112:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3088:39:5"},{"condition":{"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3141:13:5","subExpression":{"id":395,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3142:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":412,"nodeType":"IfStatement","src":"3137:201:5","trueBody":{"id":411,"nodeType":"Block","src":"3156:182:5","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":400,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3226:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$638","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$638","typeString":"contract Raffle"}],"id":399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3218:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"3218:7:5","typeDescriptions":{}}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3218:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3218:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":403,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"3257:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3257:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":407,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3299:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}],"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3291:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:5","typeDescriptions":{}}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3291:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":397,"name":"Raffle__UpkeepNotNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3177:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3177:150:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"RevertStatement","src":"3170:157:5"}]}},{"expression":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":413,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3347:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":414,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3363:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$248_$","typeString":"type(enum Raffle.RaffleState)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"CALCULATING","nodeType":"MemberAccess","referencedDeclaration":246,"src":"3363:23:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"src":"3347:39:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"id":417,"nodeType":"ExpressionStatement","src":"3347:39:5"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"requestId","nameLocation":"3404:9:5","nodeType":"VariableDeclaration","scope":433,"src":"3396:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":428,"initialValue":{"arguments":[{"id":422,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3465:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":423,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"3488:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":424,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"3518:21:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":425,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3553:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":426,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"3585:9:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":420,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3416:16:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$221","typeString":"contract VRFCoordinatorV2Interface"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":154,"src":"3416:35:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3416:188:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3396:208:5"},{"eventCall":{"arguments":[{"id":430,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"3659:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":429,"name":"RandowWinnerPick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3642:16:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3642:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":432,"nodeType":"EmitStatement","src":"3637:32:5"}]},"functionSelector":"4585e33b","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2961:13:5","nodeType":"FunctionDefinition","overrides":{"id":387,"nodeType":"OverrideSpecifier","overrides":[],"src":"3018:8:5"},"parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"2975:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":384,"name":"bytes","nodeType":"ElementaryTypeName","src":"2975:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2974:34:5"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"3027:0:5"},"scope":638,"src":"2952:724:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[98],"body":{"id":499,"nodeType":"Block","src":"3925:628:5","statements":[{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"indexOfWinner","nameLocation":"3990:13:5","nodeType":"VariableDeclaration","scope":499,"src":"3982:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"3982:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":451,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":445,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"4006:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":447,"indexExpression":{"hexValue":"30","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4018:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4006:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":448,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"4023:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4023:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4006:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3982:57:5"},{"assignments":[453],"declarations":[{"constant":false,"id":453,"mutability":"mutable","name":"recentWinter","nameLocation":"4065:12:5","nodeType":"VariableDeclaration","scope":499,"src":"4049:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4049:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":457,"initialValue":{"baseExpression":{"id":454,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"4080:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":456,"indexExpression":{"id":455,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"4090:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4080:24:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"4049:55:5"},{"expression":{"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":458,"name":"s_recentWinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4114:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":459,"name":"recentWinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4131:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4114:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":461,"nodeType":"ExpressionStatement","src":"4114:29:5"},{"expression":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":462,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4153:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":463,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4169:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$248_$","typeString":"type(enum Raffle.RaffleState)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":245,"src":"4169:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"src":"4153:32:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"id":466,"nodeType":"ExpressionStatement","src":"4153:32:5"},{"expression":{"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":467,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"4195:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4229:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4207:21:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"4211:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":469,"nodeType":"ArrayTypeName","src":"4211:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4207:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"4195:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":474,"nodeType":"ExpressionStatement","src":"4195:36:5"},{"assignments":[476,null],"declarations":[{"constant":false,"id":476,"mutability":"mutable","name":"success","nameLocation":"4297:7:5","nodeType":"VariableDeclaration","scope":499,"src":"4292:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":475,"name":"bool","nodeType":"ElementaryTypeName","src":"4292:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":487,"initialValue":{"arguments":[{"hexValue":"","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4358:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":477,"name":"recentWinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4310:12:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4310:17:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":481,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4343:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$638","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$638","typeString":"contract Raffle"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4335:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4335:7:5","typeDescriptions":{}}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4335:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4335:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4310:47:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4310:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4291:70:5"},{"condition":{"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4410:8:5","subExpression":{"id":488,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"4411:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":494,"nodeType":"IfStatement","src":"4406:69:5","trueBody":{"id":493,"nodeType":"Block","src":"4420:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"Raffle_TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"4441:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4441:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"RevertStatement","src":"4434:30:5"}]}},{"eventCall":{"arguments":[{"id":496,"name":"s_recentWinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4531:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":495,"name":"RandomWordsFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"4512:18:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4512:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"EmitStatement","src":"4507:39:5"}]},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"3813:18:5","nodeType":"FunctionDefinition","overrides":{"id":441,"nodeType":"OverrideSpecifier","overrides":[],"src":"3916:8:5"},"parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"3841:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"randomWords","nameLocation":"3889:11:5","nodeType":"VariableDeclaration","scope":500,"src":"3872:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"3872:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":438,"nodeType":"ArrayTypeName","src":"3872:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3831:75:5"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"3925:0:5"},"scope":638,"src":"3804:749:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[60],"body":{"id":558,"nodeType":"Block","src":"5008:430:5","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"isOpen","nameLocation":"5135:6:5","nodeType":"VariableDeclaration","scope":558,"src":"5130:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"5130:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":518,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":513,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5145:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$248_$","typeString":"type(enum Raffle.RaffleState)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":245,"src":"5145:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":515,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5165:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"src":"5145:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5144:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5130:49:5"},{"assignments":[520],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"timePassed","nameLocation":"5194:10:5","nodeType":"VariableDeclaration","scope":558,"src":"5189:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":519,"name":"bool","nodeType":"ElementaryTypeName","src":"5189:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":528,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":521,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5208:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5208:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":523,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5226:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5208:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5207:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":526,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"5245:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5207:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5189:66:5"},{"assignments":[530],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"hasPlayers","nameLocation":"5270:10:5","nodeType":"VariableDeclaration","scope":558,"src":"5265:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"5265:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":536,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":531,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"5284:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5284:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5303:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5284:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5283:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5265:40:5"},{"assignments":[538],"declarations":[{"constant":false,"id":538,"mutability":"mutable","name":"hasBalane","nameLocation":"5320:9:5","nodeType":"VariableDeclaration","scope":558,"src":"5315:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":537,"name":"bool","nodeType":"ElementaryTypeName","src":"5315:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":546,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":541,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5340:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$638","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$638","typeString":"contract Raffle"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5332:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5332:7:5","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5332:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5332:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5356:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5332:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5315:42:5"},{"expression":{"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":547,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"5367:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5383:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":549,"name":"timePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5393:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5383:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":551,"name":"hasBalane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"5407:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5383:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":553,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5420:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5383:47:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5382:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5367:64:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":557,"nodeType":"ExpressionStatement","src":"5367:64:5"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"4559:298:5","text":" @dev 正确使用到 chainlink 维护合约定时任务-- 是否触发优胜者\n 1 : 时间间隔处理方式\n 2 ：合约系统中至少有一位玩家并且有 eth\n 3 ： 订阅中注入了 link资金\n 4 ： 我们合约奖池应该是处于开启状态"},"functionSelector":"6e04ff0d","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"4871:11:5","nodeType":"FunctionDefinition","overrides":{"id":505,"nodeType":"OverrideSpecifier","overrides":[],"src":"4939:8:5"},"parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"4892:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":502,"name":"bytes","nodeType":"ElementaryTypeName","src":"4892:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4882:44:5"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"4962:12:5","nodeType":"VariableDeclaration","scope":559,"src":"4957:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":506,"name":"bool","nodeType":"ElementaryTypeName","src":"4957:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"4976:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":508,"name":"bytes","nodeType":"ElementaryTypeName","src":"4976:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4956:51:5"},"scope":638,"src":"4862:576:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"5500:37:5","statements":[{"expression":{"id":564,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"5517:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":563,"id":565,"nodeType":"Return","src":"5510:20:5"}]},"functionSelector":"09bc33a7","id":567,"implemented":true,"kind":"function","modifiers":[],"name":"getEntranceFee","nameLocation":"5453:14:5","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"5467:2:5"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"5491:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5491:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5490:9:5"},"scope":638,"src":"5444:93:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":578,"nodeType":"Block","src":"5607:40:5","statements":[{"expression":{"baseExpression":{"id":574,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"5624:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":576,"indexExpression":{"id":575,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5634:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5624:16:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":573,"id":577,"nodeType":"Return","src":"5617:23:5"}]},"functionSelector":"e55ae4e8","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayer","nameLocation":"5552:9:5","nodeType":"FunctionDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"index","nameLocation":"5570:5:5","nodeType":"VariableDeclaration","scope":579,"src":"5562:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"5562:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5561:15:5"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"5598:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"5598:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5597:9:5"},"scope":638,"src":"5543:104:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":586,"nodeType":"Block","src":"5710:38:5","statements":[{"expression":{"id":584,"name":"s_recentWinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"5727:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":583,"id":585,"nodeType":"Return","src":"5720:21:5"}]},"functionSelector":"2a48a144","id":587,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinter","nameLocation":"5662:15:5","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[],"src":"5677:2:5"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"5701:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5700:9:5"},"scope":638,"src":"5653:95:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":595,"nodeType":"Block","src":"5814:37:5","statements":[{"expression":{"id":593,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5831:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"functionReturnParameters":592,"id":594,"nodeType":"Return","src":"5824:20:5"}]},"functionSelector":"115cbaf5","id":596,"implemented":true,"kind":"function","modifiers":[],"name":"getRaffleState","nameLocation":"5763:14:5","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"5777:2:5"},"returnParameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":596,"src":"5801:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"},"typeName":{"id":590,"nodeType":"UserDefinedTypeName","pathNode":{"id":589,"name":"RaffleState","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"5801:11:5"},"referencedDeclaration":248,"src":"5801:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$248","typeString":"enum Raffle.RaffleState"}},"visibility":"internal"}],"src":"5800:13:5"},"scope":638,"src":"5754:97:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":603,"nodeType":"Block","src":"5947:33:5","statements":[{"expression":{"id":601,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5964:9:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":600,"id":602,"nodeType":"Return","src":"5957:16:5"}]},"functionSelector":"53a2c19a","id":604,"implemented":true,"kind":"function","modifiers":[],"name":"getNumWords","nameLocation":"5904:11:5","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"5915:2:5"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":604,"src":"5939:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":598,"name":"uint32","nodeType":"ElementaryTypeName","src":"5939:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5938:8:5"},"scope":638,"src":"5895:85:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":611,"nodeType":"Block","src":"6051:45:5","statements":[{"expression":{"id":609,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"6068:21:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":608,"id":610,"nodeType":"Return","src":"6061:28:5"}]},"functionSelector":"12b53673","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfirmatison","nameLocation":"5995:23:5","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"6018:2:5"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"6042:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"6042:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6041:9:5"},"scope":638,"src":"5986:110:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":620,"nodeType":"Block","src":"6162:40:5","statements":[{"expression":{"expression":{"id":617,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"6179:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6179:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":616,"id":619,"nodeType":"Return","src":"6172:23:5"}]},"functionSelector":"fd6673f5","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfPlayers","nameLocation":"6111:18:5","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"6129:2:5"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"6153:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6153:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6152:9:5"},"scope":638,"src":"6102:100:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":628,"nodeType":"Block","src":"6266:39:5","statements":[{"expression":{"id":626,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"6283:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":625,"id":627,"nodeType":"Return","src":"6276:22:5"}]},"functionSelector":"c1c244e8","id":629,"implemented":true,"kind":"function","modifiers":[],"name":"getLastTimeStamp","nameLocation":"6217:16:5","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"6233:2:5"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":629,"src":"6257:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6256:9:5"},"scope":638,"src":"6208:97:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":636,"nodeType":"Block","src":"6364:34:5","statements":[{"expression":{"id":634,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"6381:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":633,"id":635,"nodeType":"Return","src":"6374:17:5"}]},"functionSelector":"91ad27b4","id":637,"implemented":true,"kind":"function","modifiers":[],"name":"getInterval","nameLocation":"6320:11:5","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"6331:2:5"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":637,"src":"6355:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"6355:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6354:9:5"},"scope":638,"src":"6311:87:5","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":639,"src":"721:5679:5","usedErrors":[3,76,234,236,238,240]}],"src":"32:6369:5"},"id":5}},"contracts":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"AutomationBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a1b0c83d31573d4768fc166eaccd737a5fc7fb69e35842a5c41cbafbf3a6fe8664736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xB0 0xC8 RETURNDATASIZE BALANCE JUMPI RETURNDATASIZE SELFBALANCE PUSH9 0xFC166EACCD737A5FC7 0xFB PUSH10 0xE35842A5C41CBAFBF3A6 INVALID DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"57:634:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220a1b0c83d31573d4768fc166eaccd737a5fc7fb69e35842a5c41cbafbf3a6fe8664736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xB0 0xC8 RETURNDATASIZE BALANCE JUMPI RETURNDATASIZE SELFBALANCE PUSH9 0xFC166EACCD737A5FC7 0xFB PUSH10 0xE35842A5C41CBAFBF3A6 INVALID DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"57:634:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"_preventExecution()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function _preventExecution() internal view {\\n    // solhint-disable-next-line avoid-tx-origin\\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    _preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"AutomationCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function _preventExecution() internal view {\\n    // solhint-disable-next-line avoid-tx-origin\\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    _preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AutomationBase} from \\\"./AutomationBase.sol\\\";\\nimport {AutomationCompatibleInterface} from \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"contracts/Raffle.sol":{"Raffle":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint256","name":"interval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[],"name":"Raffle_NotEnoughETHnetered","type":"error"},{"inputs":[],"name":"Raffle_NotOpen","type":"error"},{"inputs":[],"name":"Raffle_TransferFailed","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"numPlayers","type":"uint256"},{"internalType":"uint256","name":"raffleState","type":"uint256"}],"name":"Raffle__UpkeepNotNeeded","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RaffleEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"RandomWordsFulfill","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RandowWinnerPick","type":"event"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enterRaffle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getEntranceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumWords","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getNumberOfPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaffleState","outputs":[{"internalType":"enum Raffle.RaffleState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfirmatison","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"正确使用到 chainlink 维护合约定时任务-- 是否触发优胜者 1 : 时间间隔处理方式 2 ：合约系统中至少有一位玩家并且有 eth 3 ： 订阅中注入了 link资金 4 ： 我们合约奖池应该是处于开启状态"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_346":{"entryPoint":null,"id":346,"parameterSlots":6,"returnSlots":0},"@_89":{"entryPoint":null,"id":89,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":346,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory":{"entryPoint":438,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":594,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":614,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":624,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":656,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":666,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":682,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":702,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":749,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":754,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":780,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":806,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":832,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3636:6","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:6","statements":[{"nodeType":"YulAssignment","src":"80:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:6"},"nodeType":"YulFunctionCall","src":"89:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:6"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:6"},"nodeType":"YulFunctionCall","src":"111:33:6"},"nodeType":"YulExpressionStatement","src":"111:33:6"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:6","type":""}],"src":"7:143:6"},{"body":{"nodeType":"YulBlock","src":"219:80:6","statements":[{"nodeType":"YulAssignment","src":"229:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"244:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:6"},"nodeType":"YulFunctionCall","src":"238:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"287:5:6"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"260:26:6"},"nodeType":"YulFunctionCall","src":"260:33:6"},"nodeType":"YulExpressionStatement","src":"260:33:6"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"197:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"205:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"213:5:6","type":""}],"src":"156:143:6"},{"body":{"nodeType":"YulBlock","src":"368:80:6","statements":[{"nodeType":"YulAssignment","src":"378:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"393:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"387:5:6"},"nodeType":"YulFunctionCall","src":"387:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"378:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"436:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"409:26:6"},"nodeType":"YulFunctionCall","src":"409:33:6"},"nodeType":"YulExpressionStatement","src":"409:33:6"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"346:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"354:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"362:5:6","type":""}],"src":"305:143:6"},{"body":{"nodeType":"YulBlock","src":"516:79:6","statements":[{"nodeType":"YulAssignment","src":"526:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"541:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"535:5:6"},"nodeType":"YulFunctionCall","src":"535:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"526:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"583:5:6"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"557:25:6"},"nodeType":"YulFunctionCall","src":"557:32:6"},"nodeType":"YulExpressionStatement","src":"557:32:6"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"494:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"502:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"510:5:6","type":""}],"src":"454:141:6"},{"body":{"nodeType":"YulBlock","src":"663:79:6","statements":[{"nodeType":"YulAssignment","src":"673:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"688:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"682:5:6"},"nodeType":"YulFunctionCall","src":"682:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"673:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"730:5:6"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"704:25:6"},"nodeType":"YulFunctionCall","src":"704:32:6"},"nodeType":"YulExpressionStatement","src":"704:32:6"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"641:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"649:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"657:5:6","type":""}],"src":"601:141:6"},{"body":{"nodeType":"YulBlock","src":"908:970:6","statements":[{"body":{"nodeType":"YulBlock","src":"955:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"957:77:6"},"nodeType":"YulFunctionCall","src":"957:79:6"},"nodeType":"YulExpressionStatement","src":"957:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"929:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"938:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"925:3:6"},"nodeType":"YulFunctionCall","src":"925:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"950:3:6","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"921:3:6"},"nodeType":"YulFunctionCall","src":"921:33:6"},"nodeType":"YulIf","src":"918:120:6"},{"nodeType":"YulBlock","src":"1048:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1063:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1077:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1067:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1092:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1149:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:6"},"nodeType":"YulFunctionCall","src":"1134:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1158:7:6"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1102:31:6"},"nodeType":"YulFunctionCall","src":"1102:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1092:6:6"}]}]},{"nodeType":"YulBlock","src":"1186:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1201:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1215:2:6","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1205:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1231:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1277:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1288:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1273:3:6"},"nodeType":"YulFunctionCall","src":"1273:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1297:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1241:31:6"},"nodeType":"YulFunctionCall","src":"1241:64:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1231:6:6"}]}]},{"nodeType":"YulBlock","src":"1325:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1340:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1354:2:6","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1344:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1370:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1427:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:6"},"nodeType":"YulFunctionCall","src":"1412:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1436:7:6"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"1380:31:6"},"nodeType":"YulFunctionCall","src":"1380:64:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1370:6:6"}]}]},{"nodeType":"YulBlock","src":"1464:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1479:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1493:2:6","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1483:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1509:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1554:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1565:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1550:3:6"},"nodeType":"YulFunctionCall","src":"1550:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1574:7:6"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"1519:30:6"},"nodeType":"YulFunctionCall","src":"1519:63:6"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1509:6:6"}]}]},{"nodeType":"YulBlock","src":"1602:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1617:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1631:3:6","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1621:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1648:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1693:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1704:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1689:3:6"},"nodeType":"YulFunctionCall","src":"1689:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1713:7:6"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"1658:30:6"},"nodeType":"YulFunctionCall","src":"1658:63:6"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1648:6:6"}]}]},{"nodeType":"YulBlock","src":"1741:130:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1756:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1770:3:6","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1760:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1787:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1833:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1844:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1829:3:6"},"nodeType":"YulFunctionCall","src":"1829:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1853:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1797:31:6"},"nodeType":"YulFunctionCall","src":"1797:64:6"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1787:6:6"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"838:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"849:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"861:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"869:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"877:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"885:6:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"893:6:6","type":""},{"name":"value5","nodeType":"YulTypedName","src":"901:6:6","type":""}],"src":"748:1130:6"},{"body":{"nodeType":"YulBlock","src":"1924:35:6","statements":[{"nodeType":"YulAssignment","src":"1934:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1950:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1944:5:6"},"nodeType":"YulFunctionCall","src":"1944:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1934:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1917:6:6","type":""}],"src":"1884:75:6"},{"body":{"nodeType":"YulBlock","src":"2010:51:6","statements":[{"nodeType":"YulAssignment","src":"2020:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2031:17:6"},"nodeType":"YulFunctionCall","src":"2031:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2020:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1992:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2002:7:6","type":""}],"src":"1965:96:6"},{"body":{"nodeType":"YulBlock","src":"2112:32:6","statements":[{"nodeType":"YulAssignment","src":"2122:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"2133:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2122:7:6"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2094:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2104:7:6","type":""}],"src":"2067:77:6"},{"body":{"nodeType":"YulBlock","src":"2195:81:6","statements":[{"nodeType":"YulAssignment","src":"2205:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2220:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2227:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2216:3:6"},"nodeType":"YulFunctionCall","src":"2216:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2205:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2177:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2187:7:6","type":""}],"src":"2150:126:6"},{"body":{"nodeType":"YulBlock","src":"2327:32:6","statements":[{"nodeType":"YulAssignment","src":"2337:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"2348:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2337:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2309:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2319:7:6","type":""}],"src":"2282:77:6"},{"body":{"nodeType":"YulBlock","src":"2409:49:6","statements":[{"nodeType":"YulAssignment","src":"2419:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2434:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2441:10:6","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2430:3:6"},"nodeType":"YulFunctionCall","src":"2430:22:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2419:7:6"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2391:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2401:7:6","type":""}],"src":"2365:93:6"},{"body":{"nodeType":"YulBlock","src":"2508:57:6","statements":[{"nodeType":"YulAssignment","src":"2518:41:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2533:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2540:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2529:3:6"},"nodeType":"YulFunctionCall","src":"2529:30:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2518:7:6"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2490:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2500:7:6","type":""}],"src":"2464:101:6"},{"body":{"nodeType":"YulBlock","src":"2599:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2616:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2619:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2609:6:6"},"nodeType":"YulFunctionCall","src":"2609:88:6"},"nodeType":"YulExpressionStatement","src":"2609:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2713:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2706:6:6"},"nodeType":"YulFunctionCall","src":"2706:15:6"},"nodeType":"YulExpressionStatement","src":"2706:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2737:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2740:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2730:6:6"},"nodeType":"YulFunctionCall","src":"2730:15:6"},"nodeType":"YulExpressionStatement","src":"2730:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"2571:180:6"},{"body":{"nodeType":"YulBlock","src":"2846:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2863:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2866:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2856:6:6"},"nodeType":"YulFunctionCall","src":"2856:12:6"},"nodeType":"YulExpressionStatement","src":"2856:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2757:117:6"},{"body":{"nodeType":"YulBlock","src":"2969:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2986:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2989:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2979:6:6"},"nodeType":"YulFunctionCall","src":"2979:12:6"},"nodeType":"YulExpressionStatement","src":"2979:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2880:117:6"},{"body":{"nodeType":"YulBlock","src":"3046:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3103:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3112:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3115:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3105:6:6"},"nodeType":"YulFunctionCall","src":"3105:12:6"},"nodeType":"YulExpressionStatement","src":"3105:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3069:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3094:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3076:17:6"},"nodeType":"YulFunctionCall","src":"3076:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3066:2:6"},"nodeType":"YulFunctionCall","src":"3066:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3059:6:6"},"nodeType":"YulFunctionCall","src":"3059:43:6"},"nodeType":"YulIf","src":"3056:63:6"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3039:5:6","type":""}],"src":"3003:122:6"},{"body":{"nodeType":"YulBlock","src":"3174:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3231:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3240:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3243:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3233:6:6"},"nodeType":"YulFunctionCall","src":"3233:12:6"},"nodeType":"YulExpressionStatement","src":"3233:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3197:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3222:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3204:17:6"},"nodeType":"YulFunctionCall","src":"3204:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3194:2:6"},"nodeType":"YulFunctionCall","src":"3194:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3187:6:6"},"nodeType":"YulFunctionCall","src":"3187:43:6"},"nodeType":"YulIf","src":"3184:63:6"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3167:5:6","type":""}],"src":"3131:122:6"},{"body":{"nodeType":"YulBlock","src":"3302:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3359:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3368:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3371:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3361:6:6"},"nodeType":"YulFunctionCall","src":"3361:12:6"},"nodeType":"YulExpressionStatement","src":"3361:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3325:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3350:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3332:17:6"},"nodeType":"YulFunctionCall","src":"3332:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3322:2:6"},"nodeType":"YulFunctionCall","src":"3322:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3315:6:6"},"nodeType":"YulFunctionCall","src":"3315:43:6"},"nodeType":"YulIf","src":"3312:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3295:5:6","type":""}],"src":"3259:122:6"},{"body":{"nodeType":"YulBlock","src":"3429:78:6","statements":[{"body":{"nodeType":"YulBlock","src":"3485:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3494:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3497:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3487:6:6"},"nodeType":"YulFunctionCall","src":"3487:12:6"},"nodeType":"YulExpressionStatement","src":"3487:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3452:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3476:5:6"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"3459:16:6"},"nodeType":"YulFunctionCall","src":"3459:23:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3449:2:6"},"nodeType":"YulFunctionCall","src":"3449:34:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3442:6:6"},"nodeType":"YulFunctionCall","src":"3442:42:6"},"nodeType":"YulIf","src":"3439:62:6"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3422:5:6","type":""}],"src":"3387:120:6"},{"body":{"nodeType":"YulBlock","src":"3555:78:6","statements":[{"body":{"nodeType":"YulBlock","src":"3611:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3620:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3623:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3613:6:6"},"nodeType":"YulFunctionCall","src":"3613:12:6"},"nodeType":"YulExpressionStatement","src":"3613:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3578:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3602:5:6"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3585:16:6"},"nodeType":"YulFunctionCall","src":"3585:23:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3575:2:6"},"nodeType":"YulFunctionCall","src":"3575:34:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3568:6:6"},"nodeType":"YulFunctionCall","src":"3568:42:6"},"nodeType":"YulIf","src":"3565:62:6"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3548:5:6","type":""}],"src":"3513:120:6"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101406040523480156200001257600080fd5b5060405162001867380380620018678339818101604052810190620000389190620001b6565b858073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508460a0818152505085600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360c081815250508267ffffffffffffffff1660e08167ffffffffffffffff1660c01b815250508163ffffffff166101008163ffffffff1660e01b815250506000600460006101000a81548160ff02191690836002811115620001225762000121620002be565b5b02179055504260058190555080610120818152505050505050505062000374565b6000815190506200015481620002f2565b92915050565b6000815190506200016b816200030c565b92915050565b600081519050620001828162000326565b92915050565b600081519050620001998162000340565b92915050565b600081519050620001b0816200035a565b92915050565b60008060008060008060c08789031215620001d657620001d5620002ed565b5b6000620001e689828a0162000143565b9650506020620001f989828a0162000171565b95505060406200020c89828a016200015a565b94505060606200021f89828a016200019f565b93505060806200023289828a0162000188565b92505060a06200024589828a0162000171565b9150509295509295509295565b60006200025f8262000270565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620002fd8162000252565b81146200030957600080fd5b50565b620003178162000266565b81146200032357600080fd5b50565b620003318162000290565b81146200033d57600080fd5b50565b6200034b816200029a565b81146200035757600080fd5b50565b6200036581620002aa565b81146200037157600080fd5b50565b60805160601c60a05160c05160e05160c01c6101005160e01c61012051611485620003e2600039600081816107e90152610857015260006106d5015260006106b2015260006106910152600081816102fa015261042e015260008181610344015261039801526114856000f3fe6080604052600436106100c25760003560e01c80634585e33b1161007f57806391ad27b41161005957806391ad27b414610238578063c1c244e814610263578063e55ae4e81461028e578063fd6673f5146102cb576100c2565b80634585e33b146101a657806353a2c19a146101cf5780636e04ff0d146101fa576100c2565b806309bc33a7146100c7578063115cbaf5146100f257806312b536731461011d5780631fe543e3146101485780632a48a144146101715780632cfcc5391461019c575b600080fd5b3480156100d357600080fd5b506100dc6102f6565b6040516100e99190611070565b60405180910390f35b3480156100fe57600080fd5b5061010761031e565b6040516101149190611055565b60405180910390f35b34801561012957600080fd5b50610132610335565b60405161013f9190611070565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a9190610e49565b610342565b005b34801561017d57600080fd5b50610186610402565b6040516101939190610f8e565b60405180910390f35b6101a461042c565b005b3480156101b257600080fd5b506101cd60048036038101906101c89190610d59565b61059b565b005b3480156101db57600080fd5b506101e461079d565b6040516101f191906110c2565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190610da6565b6107a6565b60405161022f929190610fd2565b60405180910390f35b34801561024457600080fd5b5061024d610853565b60405161025a9190611070565b60405180910390f35b34801561026f57600080fd5b5061027861087b565b6040516102859190611070565b60405180910390f35b34801561029a57600080fd5b506102b560048036038101906102b09190610def565b610885565b6040516102c29190610f8e565b60405180910390f35b3480156102d757600080fd5b506102e06108cc565b6040516102ed9190611070565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600460009054906101000a900460ff16905090565b6000600361ffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f457337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016103eb929190610fa9565b60405180910390fd5b6103fe82826108d8565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f0000000000000000000000000000000000000000000000000000000000000000341015610486576040517f02b4eca700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600281111561049a57610499611365565b5b600460009054906101000a900460ff1660028111156104bc576104bb611365565b5b146104f3576040517fd6e19a8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b60006105b5604051806020016040528060008152506107a6565b509050806106245747600080549050600460009054906101000a900460ff1660028111156105e6576105e5611365565b5b6040517f584327aa00000000000000000000000000000000000000000000000000000000815260040161061b9392919061108b565b60405180910390fd5b6001600460006101000a81548160ff0219169083600281111561064a57610649611365565b5b02179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b8152600401610716959493929190611002565b602060405180830381600087803b15801561073057600080fd5b505af1158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610e1c565b9050807fffa0c7626c3036061bbaafb595bc260929d35405feead367254dd7ca04ed75e960405160405180910390a250505050565b60006001905090565b600060606000600460009054906101000a900460ff1660028111156107ce576107cd611365565b5b600060028111156107e2576107e1611365565b5b14905060007f0000000000000000000000000000000000000000000000000000000000000000600554426108169190611186565b119050600080600080549050119050600080471190508380156108365750825b801561083f5750805b80156108485750815b955050505050915091565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600554905090565b600080828154811061089a57610899611394565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008080549050905090565b60008080549050826000815181106108f3576108f2611394565b5b602002602001015161090591906112d6565b9050600080828154811061091c5761091b611394565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460006101000a81548160ff021916908360028111156109b0576109af611365565b5b0217905550600067ffffffffffffffff8111156109d0576109cf6113c3565b5b6040519080825280602002602001820160405280156109fe5781602001602082028036833780820191505090505b5060009080519060200190610a14929190610b24565b5060008173ffffffffffffffffffffffffffffffffffffffff1647604051610a3b90610f79565b60006040518083038185875af1925050503d8060008114610a78576040519150601f19603f3d011682016040523d82523d6000602084013e610a7d565b606091505b5050905080610ab8576040517fba31c4f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f82335e265462fa57d652059024a95775025cab4c06b62b17f8c9dd289ce4b8fd60405160405180910390a25050505050565b828054828255906000526020600020908101928215610b9d579160200282015b82811115610b9c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b44565b5b509050610baa9190610bae565b5090565b5b80821115610bc7576000816000905550600101610baf565b5090565b6000610bde610bd984611102565b6110dd565b90508083825260208201905082856020860282011115610c0157610c006113fc565b5b60005b85811015610c315781610c178882610d2f565b845260208401935060208301925050600181019050610c04565b5050509392505050565b6000610c4e610c498461112e565b6110dd565b905082815260208101848484011115610c6a57610c69611401565b5b610c75848285611263565b509392505050565b600082601f830112610c9257610c916113f7565b5b8135610ca2848260208601610bcb565b91505092915050565b60008083601f840112610cc157610cc06113f7565b5b8235905067ffffffffffffffff811115610cde57610cdd6113f2565b5b602083019150836001820283011115610cfa57610cf96113fc565b5b9250929050565b600082601f830112610d1657610d156113f7565b5b8135610d26848260208601610c3b565b91505092915050565b600081359050610d3e81611438565b92915050565b600081519050610d5381611438565b92915050565b60008060208385031215610d7057610d6f61140b565b5b600083013567ffffffffffffffff811115610d8e57610d8d611406565b5b610d9a85828601610cab565b92509250509250929050565b600060208284031215610dbc57610dbb61140b565b5b600082013567ffffffffffffffff811115610dda57610dd9611406565b5b610de684828501610d01565b91505092915050565b600060208284031215610e0557610e0461140b565b5b6000610e1384828501610d2f565b91505092915050565b600060208284031215610e3257610e3161140b565b5b6000610e4084828501610d44565b91505092915050565b60008060408385031215610e6057610e5f61140b565b5b6000610e6e85828601610d2f565b925050602083013567ffffffffffffffff811115610e8f57610e8e611406565b5b610e9b85828601610c7d565b9150509250929050565b610eae816111ba565b82525050565b610ebd816111cc565b82525050565b610ecc816111d8565b82525050565b6000610edd8261115f565b610ee7818561116a565b9350610ef7818560208601611272565b610f0081611410565b840191505092915050565b610f1481611251565b82525050565b6000610f2760008361117b565b9150610f3282611421565b600082019050919050565b610f46816111f5565b82525050565b610f5581611223565b82525050565b610f648161122d565b82525050565b610f738161123d565b82525050565b6000610f8482610f1a565b9150819050919050565b6000602082019050610fa36000830184610ea5565b92915050565b6000604082019050610fbe6000830185610ea5565b610fcb6020830184610ea5565b9392505050565b6000604082019050610fe76000830185610eb4565b8181036020830152610ff98184610ed2565b90509392505050565b600060a0820190506110176000830188610ec3565b6110246020830187610f6a565b6110316040830186610f3d565b61103e6060830185610f5b565b61104b6080830184610f5b565b9695505050505050565b600060208201905061106a6000830184610f0b565b92915050565b60006020820190506110856000830184610f4c565b92915050565b60006060820190506110a06000830186610f4c565b6110ad6020830185610f4c565b6110ba6040830184610f4c565b949350505050565b60006020820190506110d76000830184610f5b565b92915050565b60006110e76110f8565b90506110f382826112a5565b919050565b6000604051905090565b600067ffffffffffffffff82111561111d5761111c6113c3565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611149576111486113c3565b5b61115282611410565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061119182611223565b915061119c83611223565b9250828210156111af576111ae611307565b5b828203905092915050565b60006111c582611203565b9050919050565b60008115159050919050565b6000819050919050565b60008190506111f082611424565b919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600061125c826111e2565b9050919050565b82818337600083830152505050565b60005b83811015611290578082015181840152602081019050611275565b8381111561129f576000848401525b50505050565b6112ae82611410565b810181811067ffffffffffffffff821117156112cd576112cc6113c3565b5b80604052505050565b60006112e182611223565b91506112ec83611223565b9250826112fc576112fb611336565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b6003811061143557611434611365565b5b50565b61144181611223565b811461144c57600080fd5b5056fea2646970667358221220189071c74fe8f36f2d30073566f75e7fc8fde0e65f60af314286922c6fdd8c2864736f6c63430008070033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1867 CODESIZE SUB DUP1 PUSH3 0x1867 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x1B6 JUMP JUMPDEST DUP6 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP5 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x122 JUMPI PUSH3 0x121 PUSH3 0x2BE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x374 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x154 DUP2 PUSH3 0x2F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x16B DUP2 PUSH3 0x30C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x182 DUP2 PUSH3 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x199 DUP2 PUSH3 0x340 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1B0 DUP2 PUSH3 0x35A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x1D6 JUMPI PUSH3 0x1D5 PUSH3 0x2ED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1E6 DUP10 DUP3 DUP11 ADD PUSH3 0x143 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x1F9 DUP10 DUP3 DUP11 ADD PUSH3 0x171 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x20C DUP10 DUP3 DUP11 ADD PUSH3 0x15A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x21F DUP10 DUP3 DUP11 ADD PUSH3 0x19F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x232 DUP10 DUP3 DUP11 ADD PUSH3 0x188 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x245 DUP10 DUP3 DUP11 ADD PUSH3 0x171 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x25F DUP3 PUSH3 0x270 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2FD DUP2 PUSH3 0x252 JUMP JUMPDEST DUP2 EQ PUSH3 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x317 DUP2 PUSH3 0x266 JUMP JUMPDEST DUP2 EQ PUSH3 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x331 DUP2 PUSH3 0x290 JUMP JUMPDEST DUP2 EQ PUSH3 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x34B DUP2 PUSH3 0x29A JUMP JUMPDEST DUP2 EQ PUSH3 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x365 DUP2 PUSH3 0x2AA JUMP JUMPDEST DUP2 EQ PUSH3 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH1 0xC0 SHR PUSH2 0x100 MLOAD PUSH1 0xE0 SHR PUSH2 0x120 MLOAD PUSH2 0x1485 PUSH3 0x3E2 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x7E9 ADD MSTORE PUSH2 0x857 ADD MSTORE PUSH1 0x0 PUSH2 0x6D5 ADD MSTORE PUSH1 0x0 PUSH2 0x6B2 ADD MSTORE PUSH1 0x0 PUSH2 0x691 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2FA ADD MSTORE PUSH2 0x42E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x344 ADD MSTORE PUSH2 0x398 ADD MSTORE PUSH2 0x1485 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4585E33B GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xC1C244E8 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x2CB JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1FA JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x12B53673 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x2A48A144 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP3 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F4 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP3 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FE DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2B4ECA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x1365 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD6E19A8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7A6 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x624 JUMPI SELFBALANCE PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5E6 JUMPI PUSH2 0x5E5 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x584327AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x64A JUMPI PUSH2 0x649 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x716 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x744 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x768 SWAP2 SWAP1 PUSH2 0xE1C JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xFFA0C7626C3036061BBAAFB595BC260929D35405FEEAD367254DD7CA04ED75E9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7CE JUMPI PUSH2 0x7CD PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7E2 JUMPI PUSH2 0x7E1 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x816 SWAP2 SWAP1 PUSH2 0x1186 JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x836 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x83F JUMPI POP DUP1 JUMPDEST DUP1 ISZERO PUSH2 0x848 JUMPI POP DUP2 JUMPDEST SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x89A JUMPI PUSH2 0x899 PUSH2 0x1394 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0x1394 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x1394 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9B0 JUMPI PUSH2 0x9AF PUSH2 0x1365 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9D0 JUMPI PUSH2 0x9CF PUSH2 0x13C3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9FE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA14 SWAP3 SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xA3B SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBA31C4F300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82335E265462FA57D652059024A95775025CAB4C06B62B17F8C9DD289CE4B8FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xB9D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB9C JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB44 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xBAF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDE PUSH2 0xBD9 DUP5 PUSH2 0x1102 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xC01 JUMPI PUSH2 0xC00 PUSH2 0x13FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC31 JUMPI DUP2 PUSH2 0xC17 DUP9 DUP3 PUSH2 0xD2F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC04 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4E PUSH2 0xC49 DUP5 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC6A JUMPI PUSH2 0xC69 PUSH2 0x1401 JUMP JUMPDEST JUMPDEST PUSH2 0xC75 DUP5 DUP3 DUP6 PUSH2 0x1263 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0x13F7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCC1 JUMPI PUSH2 0xCC0 PUSH2 0x13F7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCDE JUMPI PUSH2 0xCDD PUSH2 0x13F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCFA JUMPI PUSH2 0xCF9 PUSH2 0x13FC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD16 JUMPI PUSH2 0xD15 PUSH2 0x13F7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD26 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD3E DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD53 DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD70 JUMPI PUSH2 0xD6F PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH2 0xD9A DUP6 DUP3 DUP7 ADD PUSH2 0xCAB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDDA JUMPI PUSH2 0xDD9 PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH2 0xDE6 DUP5 DUP3 DUP6 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE05 JUMPI PUSH2 0xE04 PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE13 DUP5 DUP3 DUP6 ADD PUSH2 0xD2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP5 DUP3 DUP6 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH2 0xE5F PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE6E DUP6 DUP3 DUP7 ADD PUSH2 0xD2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE8F JUMPI PUSH2 0xE8E PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH2 0xE9B DUP6 DUP3 DUP7 ADD PUSH2 0xC7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAE DUP2 PUSH2 0x11BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEBD DUP2 PUSH2 0x11CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xECC DUP2 PUSH2 0x11D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEDD DUP3 PUSH2 0x115F JUMP JUMPDEST PUSH2 0xEE7 DUP2 DUP6 PUSH2 0x116A JUMP JUMPDEST SWAP4 POP PUSH2 0xEF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1272 JUMP JUMPDEST PUSH2 0xF00 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF14 DUP2 PUSH2 0x1251 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 PUSH1 0x0 DUP4 PUSH2 0x117B JUMP JUMPDEST SWAP2 POP PUSH2 0xF32 DUP3 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0x11F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF55 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF64 DUP2 PUSH2 0x122D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF73 DUP2 PUSH2 0x123D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF84 DUP3 PUSH2 0xF1A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFBE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xFCB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEB4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xFF9 DUP2 DUP5 PUSH2 0xED2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1017 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x1024 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x1031 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xF3D JUMP JUMPDEST PUSH2 0x103E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x104B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x106A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1085 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10A0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x10AD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x10BA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF4C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E7 PUSH2 0x10F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F3 DUP3 DUP3 PUSH2 0x12A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111C PUSH2 0x13C3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1149 JUMPI PUSH2 0x1148 PUSH2 0x13C3 JUMP JUMPDEST JUMPDEST PUSH2 0x1152 DUP3 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1191 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x119C DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x11AF JUMPI PUSH2 0x11AE PUSH2 0x1307 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C5 DUP3 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x11F0 DUP3 PUSH2 0x1424 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125C DUP3 PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1290 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1275 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x129F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x12AE DUP3 PUSH2 0x1410 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12CC PUSH2 0x13C3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E1 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x12EC DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12FC JUMPI PUSH2 0x12FB PUSH2 0x1336 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x1441 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP2 EQ PUSH2 0x144C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR SWAP1 PUSH18 0xC74FE8F36F2D30073566F75E7FC8FDE0E65F PUSH1 0xAF BALANCE TIMESTAMP DUP7 SWAP3 0x2C PUSH16 0xDD8C2864736F6C634300080700330000 ","sourceMap":"721:5679:5:-:0;;;1793:599;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2023:16;5700:15:3;5683:32;;;;;;;;;;;;5640:80;2067:11:5::1;2051:27;;;;::::0;::::1;2133:16;2088;;:62;;;;;;;;;;;;;;;;;;2172:7;2160:19;;;;::::0;::::1;2208:14;2189:33;;;;;;;;;;::::0;::::1;2253:16;2232:37;;;;;;;;;;::::0;::::1;2295:16;2279:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2339:15;2321;:33;;;;2377:8;2364:21;;;;::::0;::::1;1793:599:::0;;;;;;721:5679;;7:143:6;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;156:143;;;;:::o;305:::-;362:5;393:6;387:13;378:22;;409:33;436:5;409:33;:::i;:::-;305:143;;;;:::o;454:141::-;510:5;541:6;535:13;526:22;;557:32;583:5;557:32;:::i;:::-;454:141;;;;:::o;601:::-;657:5;688:6;682:13;673:22;;704:32;730:5;704:32;:::i;:::-;601:141;;;;:::o;748:1130::-;861:6;869;877;885;893;901;950:3;938:9;929:7;925:23;921:33;918:120;;;957:79;;:::i;:::-;918:120;1077:1;1102:64;1158:7;1149:6;1138:9;1134:22;1102:64;:::i;:::-;1092:74;;1048:128;1215:2;1241:64;1297:7;1288:6;1277:9;1273:22;1241:64;:::i;:::-;1231:74;;1186:129;1354:2;1380:64;1436:7;1427:6;1416:9;1412:22;1380:64;:::i;:::-;1370:74;;1325:129;1493:2;1519:63;1574:7;1565:6;1554:9;1550:22;1519:63;:::i;:::-;1509:73;;1464:128;1631:3;1658:63;1713:7;1704:6;1693:9;1689:22;1658:63;:::i;:::-;1648:73;;1602:129;1770:3;1797:64;1853:7;1844:6;1833:9;1829:22;1797:64;:::i;:::-;1787:74;;1741:130;748:1130;;;;;;;;:::o;1965:96::-;2002:7;2031:24;2049:5;2031:24;:::i;:::-;2020:35;;1965:96;;;:::o;2067:77::-;2104:7;2133:5;2122:16;;2067:77;;;:::o;2150:126::-;2187:7;2227:42;2220:5;2216:54;2205:65;;2150:126;;;:::o;2282:77::-;2319:7;2348:5;2337:16;;2282:77;;;:::o;2365:93::-;2401:7;2441:10;2434:5;2430:22;2419:33;;2365:93;;;:::o;2464:101::-;2500:7;2540:18;2533:5;2529:30;2518:41;;2464:101;;;:::o;2571:180::-;2619:77;2616:1;2609:88;2716:4;2713:1;2706:15;2740:4;2737:1;2730:15;2880:117;2989:1;2986;2979:12;3003:122;3076:24;3094:5;3076:24;:::i;:::-;3069:5;3066:35;3056:63;;3115:1;3112;3105:12;3056:63;3003:122;:::o;3131:::-;3204:24;3222:5;3204:24;:::i;:::-;3197:5;3194:35;3184:63;;3243:1;3240;3233:12;3184:63;3131:122;:::o;3259:::-;3332:24;3350:5;3332:24;:::i;:::-;3325:5;3322:35;3312:63;;3371:1;3368;3361:12;3312:63;3259:122;:::o;3387:120::-;3459:23;3476:5;3459:23;:::i;:::-;3452:5;3449:34;3439:62;;3497:1;3494;3487:12;3439:62;3387:120;:::o;3513:::-;3585:23;3602:5;3585:23;:::i;:::-;3578:5;3575:34;3565:62;;3623:1;3620;3613:12;3565:62;3513:120;:::o;721:5679:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkUpkeep_559":{"entryPoint":1958,"id":559,"parameterSlots":1,"returnSlots":2},"@enterRaffle_383":{"entryPoint":1068,"id":383,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_500":{"entryPoint":2264,"id":500,"parameterSlots":2,"returnSlots":0},"@getEntranceFee_567":{"entryPoint":758,"id":567,"parameterSlots":0,"returnSlots":1},"@getInterval_637":{"entryPoint":2131,"id":637,"parameterSlots":0,"returnSlots":1},"@getLastTimeStamp_629":{"entryPoint":2171,"id":629,"parameterSlots":0,"returnSlots":1},"@getNumWords_604":{"entryPoint":1949,"id":604,"parameterSlots":0,"returnSlots":1},"@getNumberOfPlayers_621":{"entryPoint":2252,"id":621,"parameterSlots":0,"returnSlots":1},"@getPlayer_579":{"entryPoint":2181,"id":579,"parameterSlots":1,"returnSlots":1},"@getRaffleState_596":{"entryPoint":798,"id":596,"parameterSlots":0,"returnSlots":1},"@getRecentWinter_587":{"entryPoint":1026,"id":587,"parameterSlots":0,"returnSlots":1},"@getRequestConfirmatison_612":{"entryPoint":821,"id":612,"parameterSlots":0,"returnSlots":1},"@performUpkeep_434":{"entryPoint":1435,"id":434,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_124":{"entryPoint":834,"id":124,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3019,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":3131,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3197,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3243,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":3329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":3417,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":3494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3657,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3749,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3764,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3779,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":3794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_RaffleState_$248_to_t_uint8_fromStack":{"entryPoint":3851,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":3901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3916,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":3931,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":3946,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3961,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":4009,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4050,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":4098,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_RaffleState_$248__to_t_uint8__fromStack_reversed":{"entryPoint":4181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4235,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":4290,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4317,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4344,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4354,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4398,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4447,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4458,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4475,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4486,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4538,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4556,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4568,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_RaffleState_$248":{"entryPoint":4578,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":4597,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4611,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4643,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4653,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":4669,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_RaffleState_$248_to_t_uint8":{"entryPoint":4689,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":4707,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4722,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4773,"id":null,"parameterSlots":2,"returnSlots":0},"mod_t_uint256":{"entryPoint":4822,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4871,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4918,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":4965,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5012,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5059,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5106,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5111,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5116,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5121,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5126,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5131,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5136,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":5153,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_RaffleState_$248":{"entryPoint":5156,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5176,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15820:6","statements":[{"body":{"nodeType":"YulBlock","src":"126:620:6","statements":[{"nodeType":"YulAssignment","src":"136:90:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:6"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:6"},"nodeType":"YulFunctionCall","src":"161:64:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:6"},"nodeType":"YulFunctionCall","src":"145:81:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:6"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:6","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:6","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:6"},"nodeType":"YulFunctionCall","src":"261:21:6"},"nodeType":"YulExpressionStatement","src":"261:21:6"},{"nodeType":"YulAssignment","src":"291:23:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:6"},"nodeType":"YulFunctionCall","src":"298:16:6"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:6","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:6"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:103:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"404:77:6"},"nodeType":"YulFunctionCall","src":"404:79:6"},"nodeType":"YulExpressionStatement","src":"404:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:6"},"nodeType":"YulFunctionCall","src":"365:17:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:6"},"nodeType":"YulFunctionCall","src":"356:27:6"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:6"},"nodeType":"YulFunctionCall","src":"353:36:6"},"nodeType":"YulIf","src":"350:143:6"},{"body":{"nodeType":"YulBlock","src":"562:178:6","statements":[{"nodeType":"YulVariableDeclaration","src":"577:21:6","value":{"name":"src","nodeType":"YulIdentifier","src":"595:3:6"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"581:10:6","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:6"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"645:10:6"},{"name":"end","nodeType":"YulIdentifier","src":"657:3:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"624:20:6"},"nodeType":"YulFunctionCall","src":"624:37:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"612:6:6"},"nodeType":"YulFunctionCall","src":"612:50:6"},"nodeType":"YulExpressionStatement","src":"612:50:6"},{"nodeType":"YulAssignment","src":"675:21:6","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"686:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:6"},"nodeType":"YulFunctionCall","src":"682:14:6"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"675:3:6"}]},{"nodeType":"YulAssignment","src":"709:21:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"720:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"725:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:6"},"nodeType":"YulFunctionCall","src":"716:14:6"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"709:3:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"524:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"527:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"521:2:6"},"nodeType":"YulFunctionCall","src":"521:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"535:18:6","statements":[{"nodeType":"YulAssignment","src":"537:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"546:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:6"},"nodeType":"YulFunctionCall","src":"542:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"537:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"506:14:6","statements":[{"nodeType":"YulVariableDeclaration","src":"508:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"517:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"512:1:6","type":""}]}]},"src":"502:238:6"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:6","type":""}],"src":"24:722:6"},{"body":{"nodeType":"YulBlock","src":"835:327:6","statements":[{"nodeType":"YulAssignment","src":"845:74:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"911:6:6"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"870:40:6"},"nodeType":"YulFunctionCall","src":"870:48:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"854:15:6"},"nodeType":"YulFunctionCall","src":"854:65:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"845:5:6"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"935:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"942:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"928:6:6"},"nodeType":"YulFunctionCall","src":"928:21:6"},"nodeType":"YulExpressionStatement","src":"928:21:6"},{"nodeType":"YulVariableDeclaration","src":"958:27:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"973:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"980:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"969:3:6"},"nodeType":"YulFunctionCall","src":"969:16:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"962:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1023:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1025:77:6"},"nodeType":"YulFunctionCall","src":"1025:79:6"},"nodeType":"YulExpressionStatement","src":"1025:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1004:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"1009:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1000:3:6"},"nodeType":"YulFunctionCall","src":"1000:16:6"},{"name":"end","nodeType":"YulIdentifier","src":"1018:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"997:2:6"},"nodeType":"YulFunctionCall","src":"997:25:6"},"nodeType":"YulIf","src":"994:112:6"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1139:3:6"},{"name":"dst","nodeType":"YulIdentifier","src":"1144:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"1149:6:6"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"1115:23:6"},"nodeType":"YulFunctionCall","src":"1115:41:6"},"nodeType":"YulExpressionStatement","src":"1115:41:6"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"808:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"813:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"821:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"829:5:6","type":""}],"src":"752:410:6"},{"body":{"nodeType":"YulBlock","src":"1262:293:6","statements":[{"body":{"nodeType":"YulBlock","src":"1311:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1313:77:6"},"nodeType":"YulFunctionCall","src":"1313:79:6"},"nodeType":"YulExpressionStatement","src":"1313:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1290:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1298:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:6"},"nodeType":"YulFunctionCall","src":"1286:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"1305:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1282:3:6"},"nodeType":"YulFunctionCall","src":"1282:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1275:6:6"},"nodeType":"YulFunctionCall","src":"1275:35:6"},"nodeType":"YulIf","src":"1272:122:6"},{"nodeType":"YulVariableDeclaration","src":"1403:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1430:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1417:12:6"},"nodeType":"YulFunctionCall","src":"1417:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1407:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1446:103:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1522:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1530:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1518:3:6"},"nodeType":"YulFunctionCall","src":"1518:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"1537:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"1545:3:6"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1455:62:6"},"nodeType":"YulFunctionCall","src":"1455:94:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1446:5:6"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1240:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"1248:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1256:5:6","type":""}],"src":"1185:370:6"},{"body":{"nodeType":"YulBlock","src":"1648:478:6","statements":[{"body":{"nodeType":"YulBlock","src":"1697:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1699:77:6"},"nodeType":"YulFunctionCall","src":"1699:79:6"},"nodeType":"YulExpressionStatement","src":"1699:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1676:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1684:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1672:3:6"},"nodeType":"YulFunctionCall","src":"1672:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"1691:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1668:3:6"},"nodeType":"YulFunctionCall","src":"1668:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1661:6:6"},"nodeType":"YulFunctionCall","src":"1661:35:6"},"nodeType":"YulIf","src":"1658:122:6"},{"nodeType":"YulAssignment","src":"1789:30:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1812:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1799:12:6"},"nodeType":"YulFunctionCall","src":"1799:20:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1789:6:6"}]},{"body":{"nodeType":"YulBlock","src":"1862:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1864:77:6"},"nodeType":"YulFunctionCall","src":"1864:79:6"},"nodeType":"YulExpressionStatement","src":"1864:79:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1834:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1842:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1831:2:6"},"nodeType":"YulFunctionCall","src":"1831:30:6"},"nodeType":"YulIf","src":"1828:117:6"},{"nodeType":"YulAssignment","src":"1954:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1970:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1978:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:6"},"nodeType":"YulFunctionCall","src":"1966:17:6"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1954:8:6"}]},{"body":{"nodeType":"YulBlock","src":"2037:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2039:77:6"},"nodeType":"YulFunctionCall","src":"2039:79:6"},"nodeType":"YulExpressionStatement","src":"2039:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2002:8:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2016:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2024:4:6","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2012:3:6"},"nodeType":"YulFunctionCall","src":"2012:17:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:6"},"nodeType":"YulFunctionCall","src":"1998:32:6"},{"name":"end","nodeType":"YulIdentifier","src":"2032:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1995:2:6"},"nodeType":"YulFunctionCall","src":"1995:41:6"},"nodeType":"YulIf","src":"1992:128:6"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1615:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"1623:3:6","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1631:8:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"1641:6:6","type":""}],"src":"1574:552:6"},{"body":{"nodeType":"YulBlock","src":"2206:277:6","statements":[{"body":{"nodeType":"YulBlock","src":"2255:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2257:77:6"},"nodeType":"YulFunctionCall","src":"2257:79:6"},"nodeType":"YulExpressionStatement","src":"2257:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2234:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2242:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2230:3:6"},"nodeType":"YulFunctionCall","src":"2230:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"2249:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2226:3:6"},"nodeType":"YulFunctionCall","src":"2226:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2219:6:6"},"nodeType":"YulFunctionCall","src":"2219:35:6"},"nodeType":"YulIf","src":"2216:122:6"},{"nodeType":"YulVariableDeclaration","src":"2347:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2374:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2361:12:6"},"nodeType":"YulFunctionCall","src":"2361:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2351:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2390:87:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2450:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2458:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2446:3:6"},"nodeType":"YulFunctionCall","src":"2446:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"2465:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"2473:3:6"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2399:46:6"},"nodeType":"YulFunctionCall","src":"2399:78:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2390:5:6"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2184:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2192:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2200:5:6","type":""}],"src":"2145:338:6"},{"body":{"nodeType":"YulBlock","src":"2541:87:6","statements":[{"nodeType":"YulAssignment","src":"2551:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2573:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2560:12:6"},"nodeType":"YulFunctionCall","src":"2560:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2551:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2616:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2589:26:6"},"nodeType":"YulFunctionCall","src":"2589:33:6"},"nodeType":"YulExpressionStatement","src":"2589:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2519:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2527:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2535:5:6","type":""}],"src":"2489:139:6"},{"body":{"nodeType":"YulBlock","src":"2697:80:6","statements":[{"nodeType":"YulAssignment","src":"2707:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2722:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2716:5:6"},"nodeType":"YulFunctionCall","src":"2716:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2707:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2765:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2738:26:6"},"nodeType":"YulFunctionCall","src":"2738:33:6"},"nodeType":"YulExpressionStatement","src":"2738:33:6"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2675:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2683:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2691:5:6","type":""}],"src":"2634:143:6"},{"body":{"nodeType":"YulBlock","src":"2868:442:6","statements":[{"body":{"nodeType":"YulBlock","src":"2914:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2916:77:6"},"nodeType":"YulFunctionCall","src":"2916:79:6"},"nodeType":"YulExpressionStatement","src":"2916:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2889:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2898:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2885:3:6"},"nodeType":"YulFunctionCall","src":"2885:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2910:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2881:3:6"},"nodeType":"YulFunctionCall","src":"2881:32:6"},"nodeType":"YulIf","src":"2878:119:6"},{"nodeType":"YulBlock","src":"3007:296:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3022:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3053:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3064:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3049:3:6"},"nodeType":"YulFunctionCall","src":"3049:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3036:12:6"},"nodeType":"YulFunctionCall","src":"3036:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3026:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3114:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3116:77:6"},"nodeType":"YulFunctionCall","src":"3116:79:6"},"nodeType":"YulExpressionStatement","src":"3116:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3086:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3094:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3083:2:6"},"nodeType":"YulFunctionCall","src":"3083:30:6"},"nodeType":"YulIf","src":"3080:117:6"},{"nodeType":"YulAssignment","src":"3211:82:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3265:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3276:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3261:3:6"},"nodeType":"YulFunctionCall","src":"3261:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3285:7:6"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3229:31:6"},"nodeType":"YulFunctionCall","src":"3229:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3211:6:6"},{"name":"value1","nodeType":"YulIdentifier","src":"3219:6:6"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2830:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2841:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2853:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2861:6:6","type":""}],"src":"2783:527:6"},{"body":{"nodeType":"YulBlock","src":"3391:432:6","statements":[{"body":{"nodeType":"YulBlock","src":"3437:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3439:77:6"},"nodeType":"YulFunctionCall","src":"3439:79:6"},"nodeType":"YulExpressionStatement","src":"3439:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3412:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3408:3:6"},"nodeType":"YulFunctionCall","src":"3408:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3433:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3404:3:6"},"nodeType":"YulFunctionCall","src":"3404:32:6"},"nodeType":"YulIf","src":"3401:119:6"},{"nodeType":"YulBlock","src":"3530:286:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3545:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3576:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3587:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3572:3:6"},"nodeType":"YulFunctionCall","src":"3572:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3559:12:6"},"nodeType":"YulFunctionCall","src":"3559:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3549:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3637:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3639:77:6"},"nodeType":"YulFunctionCall","src":"3639:79:6"},"nodeType":"YulExpressionStatement","src":"3639:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3609:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3617:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3606:2:6"},"nodeType":"YulFunctionCall","src":"3606:30:6"},"nodeType":"YulIf","src":"3603:117:6"},{"nodeType":"YulAssignment","src":"3734:72:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3778:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3789:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3774:3:6"},"nodeType":"YulFunctionCall","src":"3774:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3798:7:6"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3744:29:6"},"nodeType":"YulFunctionCall","src":"3744:62:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3734:6:6"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3361:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3372:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3384:6:6","type":""}],"src":"3316:507:6"},{"body":{"nodeType":"YulBlock","src":"3895:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"3941:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3943:77:6"},"nodeType":"YulFunctionCall","src":"3943:79:6"},"nodeType":"YulExpressionStatement","src":"3943:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3916:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3925:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3912:3:6"},"nodeType":"YulFunctionCall","src":"3912:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3937:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3908:3:6"},"nodeType":"YulFunctionCall","src":"3908:32:6"},"nodeType":"YulIf","src":"3905:119:6"},{"nodeType":"YulBlock","src":"4034:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4049:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4063:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4053:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4078:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4113:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4124:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4109:3:6"},"nodeType":"YulFunctionCall","src":"4109:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4133:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4088:20:6"},"nodeType":"YulFunctionCall","src":"4088:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4078:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3865:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3876:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3888:6:6","type":""}],"src":"3829:329:6"},{"body":{"nodeType":"YulBlock","src":"4241:274:6","statements":[{"body":{"nodeType":"YulBlock","src":"4287:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4289:77:6"},"nodeType":"YulFunctionCall","src":"4289:79:6"},"nodeType":"YulExpressionStatement","src":"4289:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4262:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4271:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4258:3:6"},"nodeType":"YulFunctionCall","src":"4258:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4283:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4254:3:6"},"nodeType":"YulFunctionCall","src":"4254:32:6"},"nodeType":"YulIf","src":"4251:119:6"},{"nodeType":"YulBlock","src":"4380:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4395:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4409:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4399:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4424:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4470:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4481:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4466:3:6"},"nodeType":"YulFunctionCall","src":"4466:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4490:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4434:31:6"},"nodeType":"YulFunctionCall","src":"4434:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4424:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4211:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4222:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4234:6:6","type":""}],"src":"4164:351:6"},{"body":{"nodeType":"YulBlock","src":"4629:576:6","statements":[{"body":{"nodeType":"YulBlock","src":"4675:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4677:77:6"},"nodeType":"YulFunctionCall","src":"4677:79:6"},"nodeType":"YulExpressionStatement","src":"4677:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4650:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4659:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4646:3:6"},"nodeType":"YulFunctionCall","src":"4646:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4671:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4642:3:6"},"nodeType":"YulFunctionCall","src":"4642:32:6"},"nodeType":"YulIf","src":"4639:119:6"},{"nodeType":"YulBlock","src":"4768:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4783:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4797:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4787:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4812:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4847:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4858:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4843:3:6"},"nodeType":"YulFunctionCall","src":"4843:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4867:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4822:20:6"},"nodeType":"YulFunctionCall","src":"4822:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4812:6:6"}]}]},{"nodeType":"YulBlock","src":"4895:303:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4910:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4941:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4952:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4937:3:6"},"nodeType":"YulFunctionCall","src":"4937:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4924:12:6"},"nodeType":"YulFunctionCall","src":"4924:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4914:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"5003:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5005:77:6"},"nodeType":"YulFunctionCall","src":"5005:79:6"},"nodeType":"YulExpressionStatement","src":"5005:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4975:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4983:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4972:2:6"},"nodeType":"YulFunctionCall","src":"4972:30:6"},"nodeType":"YulIf","src":"4969:117:6"},{"nodeType":"YulAssignment","src":"5100:88:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5160:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5171:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5156:3:6"},"nodeType":"YulFunctionCall","src":"5156:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5180:7:6"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5110:45:6"},"nodeType":"YulFunctionCall","src":"5110:78:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5100:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4591:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4602:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4614:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4622:6:6","type":""}],"src":"4521:684:6"},{"body":{"nodeType":"YulBlock","src":"5276:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5293:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5316:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5298:17:6"},"nodeType":"YulFunctionCall","src":"5298:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:6"},"nodeType":"YulFunctionCall","src":"5286:37:6"},"nodeType":"YulExpressionStatement","src":"5286:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5264:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5271:3:6","type":""}],"src":"5211:118:6"},{"body":{"nodeType":"YulBlock","src":"5394:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5411:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5431:5:6"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5416:14:6"},"nodeType":"YulFunctionCall","src":"5416:21:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5404:6:6"},"nodeType":"YulFunctionCall","src":"5404:34:6"},"nodeType":"YulExpressionStatement","src":"5404:34:6"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5382:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5389:3:6","type":""}],"src":"5335:109:6"},{"body":{"nodeType":"YulBlock","src":"5515:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5532:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5555:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5537:17:6"},"nodeType":"YulFunctionCall","src":"5537:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5525:6:6"},"nodeType":"YulFunctionCall","src":"5525:37:6"},"nodeType":"YulExpressionStatement","src":"5525:37:6"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5503:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5510:3:6","type":""}],"src":"5450:118:6"},{"body":{"nodeType":"YulBlock","src":"5664:270:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5674:52:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5720:5:6"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5688:31:6"},"nodeType":"YulFunctionCall","src":"5688:38:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5678:6:6","type":""}]},{"nodeType":"YulAssignment","src":"5735:77:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5800:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"5805:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5742:57:6"},"nodeType":"YulFunctionCall","src":"5742:70:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5735:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5847:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"5854:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:6"},"nodeType":"YulFunctionCall","src":"5843:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"5861:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"5866:6:6"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5821:21:6"},"nodeType":"YulFunctionCall","src":"5821:52:6"},"nodeType":"YulExpressionStatement","src":"5821:52:6"},{"nodeType":"YulAssignment","src":"5882:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5893:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5920:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5898:21:6"},"nodeType":"YulFunctionCall","src":"5898:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5889:3:6"},"nodeType":"YulFunctionCall","src":"5889:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5882:3:6"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5645:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5652:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5660:3:6","type":""}],"src":"5574:360:6"},{"body":{"nodeType":"YulBlock","src":"6018:79:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6035:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6084:5:6"}],"functionName":{"name":"convert_t_enum$_RaffleState_$248_to_t_uint8","nodeType":"YulIdentifier","src":"6040:43:6"},"nodeType":"YulFunctionCall","src":"6040:50:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6028:6:6"},"nodeType":"YulFunctionCall","src":"6028:63:6"},"nodeType":"YulExpressionStatement","src":"6028:63:6"}]},"name":"abi_encode_t_enum$_RaffleState_$248_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6006:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6013:3:6","type":""}],"src":"5940:157:6"},{"body":{"nodeType":"YulBlock","src":"6266:235:6","statements":[{"nodeType":"YulAssignment","src":"6276:90:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6359:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"6364:1:6","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6283:75:6"},"nodeType":"YulFunctionCall","src":"6283:83:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6276:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6464:3:6"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"6375:88:6"},"nodeType":"YulFunctionCall","src":"6375:93:6"},"nodeType":"YulExpressionStatement","src":"6375:93:6"},{"nodeType":"YulAssignment","src":"6477:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6488:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"6493:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6484:3:6"},"nodeType":"YulFunctionCall","src":"6484:11:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6477:3:6"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6254:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6262:3:6","type":""}],"src":"6103:398:6"},{"body":{"nodeType":"YulBlock","src":"6570:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6587:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6609:5:6"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"6592:16:6"},"nodeType":"YulFunctionCall","src":"6592:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6580:6:6"},"nodeType":"YulFunctionCall","src":"6580:36:6"},"nodeType":"YulExpressionStatement","src":"6580:36:6"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6558:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6565:3:6","type":""}],"src":"6507:115:6"},{"body":{"nodeType":"YulBlock","src":"6693:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6710:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6733:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6715:17:6"},"nodeType":"YulFunctionCall","src":"6715:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6703:6:6"},"nodeType":"YulFunctionCall","src":"6703:37:6"},"nodeType":"YulExpressionStatement","src":"6703:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6681:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6688:3:6","type":""}],"src":"6628:118:6"},{"body":{"nodeType":"YulBlock","src":"6815:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6832:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6854:5:6"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6837:16:6"},"nodeType":"YulFunctionCall","src":"6837:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6825:6:6"},"nodeType":"YulFunctionCall","src":"6825:36:6"},"nodeType":"YulExpressionStatement","src":"6825:36:6"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6803:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6810:3:6","type":""}],"src":"6752:115:6"},{"body":{"nodeType":"YulBlock","src":"6936:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6953:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6975:5:6"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"6958:16:6"},"nodeType":"YulFunctionCall","src":"6958:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6946:6:6"},"nodeType":"YulFunctionCall","src":"6946:36:6"},"nodeType":"YulExpressionStatement","src":"6946:36:6"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6924:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6931:3:6","type":""}],"src":"6873:115:6"},{"body":{"nodeType":"YulBlock","src":"7182:191:6","statements":[{"nodeType":"YulAssignment","src":"7193:154:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7343:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7200:141:6"},"nodeType":"YulFunctionCall","src":"7200:147:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7193:3:6"}]},{"nodeType":"YulAssignment","src":"7357:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"7364:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7357:3:6"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7169:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7178:3:6","type":""}],"src":"6994:379:6"},{"body":{"nodeType":"YulBlock","src":"7477:124:6","statements":[{"nodeType":"YulAssignment","src":"7487:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7499:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7510:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7495:3:6"},"nodeType":"YulFunctionCall","src":"7495:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7487:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7567:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7591:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:6"},"nodeType":"YulFunctionCall","src":"7576:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7523:43:6"},"nodeType":"YulFunctionCall","src":"7523:71:6"},"nodeType":"YulExpressionStatement","src":"7523:71:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7449:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7461:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7472:4:6","type":""}],"src":"7379:222:6"},{"body":{"nodeType":"YulBlock","src":"7733:206:6","statements":[{"nodeType":"YulAssignment","src":"7743:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7755:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7766:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7751:3:6"},"nodeType":"YulFunctionCall","src":"7751:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7743:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7823:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7836:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7847:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7832:3:6"},"nodeType":"YulFunctionCall","src":"7832:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7779:43:6"},"nodeType":"YulFunctionCall","src":"7779:71:6"},"nodeType":"YulExpressionStatement","src":"7779:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7904:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7917:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7928:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7913:3:6"},"nodeType":"YulFunctionCall","src":"7913:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7860:43:6"},"nodeType":"YulFunctionCall","src":"7860:72:6"},"nodeType":"YulExpressionStatement","src":"7860:72:6"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7697:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7709:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7717:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7728:4:6","type":""}],"src":"7607:332:6"},{"body":{"nodeType":"YulBlock","src":"8083:269:6","statements":[{"nodeType":"YulAssignment","src":"8093:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8105:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8116:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8101:3:6"},"nodeType":"YulFunctionCall","src":"8101:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8093:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8167:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8180:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8191:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8176:3:6"},"nodeType":"YulFunctionCall","src":"8176:17:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"8129:37:6"},"nodeType":"YulFunctionCall","src":"8129:65:6"},"nodeType":"YulExpressionStatement","src":"8129:65:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8215:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8226:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8211:3:6"},"nodeType":"YulFunctionCall","src":"8211:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8235:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"8241:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8231:3:6"},"nodeType":"YulFunctionCall","src":"8231:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8204:6:6"},"nodeType":"YulFunctionCall","src":"8204:48:6"},"nodeType":"YulExpressionStatement","src":"8204:48:6"},{"nodeType":"YulAssignment","src":"8261:84:6","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8331:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"8340:4:6"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8269:61:6"},"nodeType":"YulFunctionCall","src":"8269:76:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8261:4:6"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8047:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8059:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8067:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8078:4:6","type":""}],"src":"7945:407:6"},{"body":{"nodeType":"YulBlock","src":"8560:446:6","statements":[{"nodeType":"YulAssignment","src":"8570:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8582:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8593:3:6","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8578:3:6"},"nodeType":"YulFunctionCall","src":"8578:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8570:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8651:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8664:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8675:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8660:3:6"},"nodeType":"YulFunctionCall","src":"8660:17:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8607:43:6"},"nodeType":"YulFunctionCall","src":"8607:71:6"},"nodeType":"YulExpressionStatement","src":"8607:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8730:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8743:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8754:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8739:3:6"},"nodeType":"YulFunctionCall","src":"8739:18:6"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"8688:41:6"},"nodeType":"YulFunctionCall","src":"8688:70:6"},"nodeType":"YulExpressionStatement","src":"8688:70:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8810:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8823:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8834:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8819:3:6"},"nodeType":"YulFunctionCall","src":"8819:18:6"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"8768:41:6"},"nodeType":"YulFunctionCall","src":"8768:70:6"},"nodeType":"YulExpressionStatement","src":"8768:70:6"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8890:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8903:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8914:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8899:3:6"},"nodeType":"YulFunctionCall","src":"8899:18:6"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"8848:41:6"},"nodeType":"YulFunctionCall","src":"8848:70:6"},"nodeType":"YulExpressionStatement","src":"8848:70:6"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8970:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8983:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8994:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8979:3:6"},"nodeType":"YulFunctionCall","src":"8979:19:6"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"8928:41:6"},"nodeType":"YulFunctionCall","src":"8928:71:6"},"nodeType":"YulExpressionStatement","src":"8928:71:6"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8500:9:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8512:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8520:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8528:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8536:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8544:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8555:4:6","type":""}],"src":"8358:648:6"},{"body":{"nodeType":"YulBlock","src":"9123:137:6","statements":[{"nodeType":"YulAssignment","src":"9133:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9145:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9156:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9141:3:6"},"nodeType":"YulFunctionCall","src":"9141:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9133:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9226:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9239:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9250:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9235:3:6"},"nodeType":"YulFunctionCall","src":"9235:17:6"}],"functionName":{"name":"abi_encode_t_enum$_RaffleState_$248_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9169:56:6"},"nodeType":"YulFunctionCall","src":"9169:84:6"},"nodeType":"YulExpressionStatement","src":"9169:84:6"}]},"name":"abi_encode_tuple_t_enum$_RaffleState_$248__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9095:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9107:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9118:4:6","type":""}],"src":"9012:248:6"},{"body":{"nodeType":"YulBlock","src":"9364:124:6","statements":[{"nodeType":"YulAssignment","src":"9374:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9386:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9397:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9382:3:6"},"nodeType":"YulFunctionCall","src":"9382:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9374:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9454:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9467:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9478:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9463:3:6"},"nodeType":"YulFunctionCall","src":"9463:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9410:43:6"},"nodeType":"YulFunctionCall","src":"9410:71:6"},"nodeType":"YulExpressionStatement","src":"9410:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9336:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9348:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9359:4:6","type":""}],"src":"9266:222:6"},{"body":{"nodeType":"YulBlock","src":"9648:288:6","statements":[{"nodeType":"YulAssignment","src":"9658:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9670:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9681:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9666:3:6"},"nodeType":"YulFunctionCall","src":"9666:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9658:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9738:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9751:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9762:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9747:3:6"},"nodeType":"YulFunctionCall","src":"9747:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9694:43:6"},"nodeType":"YulFunctionCall","src":"9694:71:6"},"nodeType":"YulExpressionStatement","src":"9694:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9819:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9832:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9843:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9828:3:6"},"nodeType":"YulFunctionCall","src":"9828:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9775:43:6"},"nodeType":"YulFunctionCall","src":"9775:72:6"},"nodeType":"YulExpressionStatement","src":"9775:72:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9901:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9914:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9925:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9910:3:6"},"nodeType":"YulFunctionCall","src":"9910:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9857:43:6"},"nodeType":"YulFunctionCall","src":"9857:72:6"},"nodeType":"YulExpressionStatement","src":"9857:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9604:9:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9616:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9624:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9632:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9643:4:6","type":""}],"src":"9494:442:6"},{"body":{"nodeType":"YulBlock","src":"10038:122:6","statements":[{"nodeType":"YulAssignment","src":"10048:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10060:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10071:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10056:3:6"},"nodeType":"YulFunctionCall","src":"10056:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10048:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10126:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10139:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10150:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10135:3:6"},"nodeType":"YulFunctionCall","src":"10135:17:6"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"10084:41:6"},"nodeType":"YulFunctionCall","src":"10084:69:6"},"nodeType":"YulExpressionStatement","src":"10084:69:6"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10010:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10022:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10033:4:6","type":""}],"src":"9942:218:6"},{"body":{"nodeType":"YulBlock","src":"10207:88:6","statements":[{"nodeType":"YulAssignment","src":"10217:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"10227:18:6"},"nodeType":"YulFunctionCall","src":"10227:20:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10217:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10276:6:6"},{"name":"size","nodeType":"YulIdentifier","src":"10284:4:6"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"10256:19:6"},"nodeType":"YulFunctionCall","src":"10256:33:6"},"nodeType":"YulExpressionStatement","src":"10256:33:6"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"10191:4:6","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"10200:6:6","type":""}],"src":"10166:129:6"},{"body":{"nodeType":"YulBlock","src":"10341:35:6","statements":[{"nodeType":"YulAssignment","src":"10351:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10367:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10361:5:6"},"nodeType":"YulFunctionCall","src":"10361:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10351:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"10334:6:6","type":""}],"src":"10301:75:6"},{"body":{"nodeType":"YulBlock","src":"10464:229:6","statements":[{"body":{"nodeType":"YulBlock","src":"10569:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10571:16:6"},"nodeType":"YulFunctionCall","src":"10571:18:6"},"nodeType":"YulExpressionStatement","src":"10571:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10541:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10549:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10538:2:6"},"nodeType":"YulFunctionCall","src":"10538:30:6"},"nodeType":"YulIf","src":"10535:56:6"},{"nodeType":"YulAssignment","src":"10601:25:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10613:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10621:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10609:3:6"},"nodeType":"YulFunctionCall","src":"10609:17:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10601:4:6"}]},{"nodeType":"YulAssignment","src":"10663:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10675:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"10681:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10671:3:6"},"nodeType":"YulFunctionCall","src":"10671:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10663:4:6"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10448:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10459:4:6","type":""}],"src":"10382:311:6"},{"body":{"nodeType":"YulBlock","src":"10765:241:6","statements":[{"body":{"nodeType":"YulBlock","src":"10870:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10872:16:6"},"nodeType":"YulFunctionCall","src":"10872:18:6"},"nodeType":"YulExpressionStatement","src":"10872:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10842:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10850:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10839:2:6"},"nodeType":"YulFunctionCall","src":"10839:30:6"},"nodeType":"YulIf","src":"10836:56:6"},{"nodeType":"YulAssignment","src":"10902:37:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10932:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10910:21:6"},"nodeType":"YulFunctionCall","src":"10910:29:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10902:4:6"}]},{"nodeType":"YulAssignment","src":"10976:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10988:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"10994:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10984:3:6"},"nodeType":"YulFunctionCall","src":"10984:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10976:4:6"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10749:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10760:4:6","type":""}],"src":"10699:307:6"},{"body":{"nodeType":"YulBlock","src":"11070:40:6","statements":[{"nodeType":"YulAssignment","src":"11081:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11097:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11091:5:6"},"nodeType":"YulFunctionCall","src":"11091:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11081:6:6"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11053:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11063:6:6","type":""}],"src":"11012:98:6"},{"body":{"nodeType":"YulBlock","src":"11211:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11228:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"11233:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11221:6:6"},"nodeType":"YulFunctionCall","src":"11221:19:6"},"nodeType":"YulExpressionStatement","src":"11221:19:6"},{"nodeType":"YulAssignment","src":"11249:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11268:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11273:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11264:3:6"},"nodeType":"YulFunctionCall","src":"11264:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11249:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11183:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"11188:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11199:11:6","type":""}],"src":"11116:168:6"},{"body":{"nodeType":"YulBlock","src":"11403:34:6","statements":[{"nodeType":"YulAssignment","src":"11413:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"11428:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11413:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11375:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"11380:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11391:11:6","type":""}],"src":"11290:147:6"},{"body":{"nodeType":"YulBlock","src":"11488:146:6","statements":[{"nodeType":"YulAssignment","src":"11498:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11521:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11503:17:6"},"nodeType":"YulFunctionCall","src":"11503:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11498:1:6"}]},{"nodeType":"YulAssignment","src":"11532:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11555:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11537:17:6"},"nodeType":"YulFunctionCall","src":"11537:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11532:1:6"}]},{"body":{"nodeType":"YulBlock","src":"11579:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11581:16:6"},"nodeType":"YulFunctionCall","src":"11581:18:6"},"nodeType":"YulExpressionStatement","src":"11581:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11573:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"11576:1:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11570:2:6"},"nodeType":"YulFunctionCall","src":"11570:8:6"},"nodeType":"YulIf","src":"11567:34:6"},{"nodeType":"YulAssignment","src":"11611:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11623:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"11626:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11619:3:6"},"nodeType":"YulFunctionCall","src":"11619:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11611:4:6"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11474:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"11477:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11483:4:6","type":""}],"src":"11443:191:6"},{"body":{"nodeType":"YulBlock","src":"11685:51:6","statements":[{"nodeType":"YulAssignment","src":"11695:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11724:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11706:17:6"},"nodeType":"YulFunctionCall","src":"11706:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11695:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11667:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11677:7:6","type":""}],"src":"11640:96:6"},{"body":{"nodeType":"YulBlock","src":"11784:48:6","statements":[{"nodeType":"YulAssignment","src":"11794:32:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11819:5:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11812:6:6"},"nodeType":"YulFunctionCall","src":"11812:13:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11805:6:6"},"nodeType":"YulFunctionCall","src":"11805:21:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11794:7:6"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11766:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11776:7:6","type":""}],"src":"11742:90:6"},{"body":{"nodeType":"YulBlock","src":"11883:32:6","statements":[{"nodeType":"YulAssignment","src":"11893:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"11904:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11893:7:6"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11865:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11875:7:6","type":""}],"src":"11838:77:6"},{"body":{"nodeType":"YulBlock","src":"11981:81:6","statements":[{"nodeType":"YulAssignment","src":"11991:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"12002:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11991:7:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12050:5:6"}],"functionName":{"name":"validator_assert_t_enum$_RaffleState_$248","nodeType":"YulIdentifier","src":"12008:41:6"},"nodeType":"YulFunctionCall","src":"12008:48:6"},"nodeType":"YulExpressionStatement","src":"12008:48:6"}]},"name":"cleanup_t_enum$_RaffleState_$248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11963:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11973:7:6","type":""}],"src":"11921:141:6"},{"body":{"nodeType":"YulBlock","src":"12112:45:6","statements":[{"nodeType":"YulAssignment","src":"12122:29:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12137:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12144:6:6","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12133:3:6"},"nodeType":"YulFunctionCall","src":"12133:18:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12122:7:6"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12094:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12104:7:6","type":""}],"src":"12068:89:6"},{"body":{"nodeType":"YulBlock","src":"12208:81:6","statements":[{"nodeType":"YulAssignment","src":"12218:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12233:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12240:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12229:3:6"},"nodeType":"YulFunctionCall","src":"12229:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12218:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12190:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12200:7:6","type":""}],"src":"12163:126:6"},{"body":{"nodeType":"YulBlock","src":"12340:32:6","statements":[{"nodeType":"YulAssignment","src":"12350:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"12361:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12350:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12322:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12332:7:6","type":""}],"src":"12295:77:6"},{"body":{"nodeType":"YulBlock","src":"12422:49:6","statements":[{"nodeType":"YulAssignment","src":"12432:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12447:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12454:10:6","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12443:3:6"},"nodeType":"YulFunctionCall","src":"12443:22:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12432:7:6"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12404:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12414:7:6","type":""}],"src":"12378:93:6"},{"body":{"nodeType":"YulBlock","src":"12521:57:6","statements":[{"nodeType":"YulAssignment","src":"12531:41:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12546:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12553:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12542:3:6"},"nodeType":"YulFunctionCall","src":"12542:30:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12531:7:6"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12503:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12513:7:6","type":""}],"src":"12477:101:6"},{"body":{"nodeType":"YulBlock","src":"12657:68:6","statements":[{"nodeType":"YulAssignment","src":"12667:52:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12713:5:6"}],"functionName":{"name":"cleanup_t_enum$_RaffleState_$248","nodeType":"YulIdentifier","src":"12680:32:6"},"nodeType":"YulFunctionCall","src":"12680:39:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12667:9:6"}]}]},"name":"convert_t_enum$_RaffleState_$248_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12637:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12647:9:6","type":""}],"src":"12584:141:6"},{"body":{"nodeType":"YulBlock","src":"12782:103:6","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12805:3:6"},{"name":"src","nodeType":"YulIdentifier","src":"12810:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"12815:6:6"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"12792:12:6"},"nodeType":"YulFunctionCall","src":"12792:30:6"},"nodeType":"YulExpressionStatement","src":"12792:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12863:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"12868:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12859:3:6"},"nodeType":"YulFunctionCall","src":"12859:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"12877:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12852:6:6"},"nodeType":"YulFunctionCall","src":"12852:27:6"},"nodeType":"YulExpressionStatement","src":"12852:27:6"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12764:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12769:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"12774:6:6","type":""}],"src":"12731:154:6"},{"body":{"nodeType":"YulBlock","src":"12940:258:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12950:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"12959:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12954:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"13019:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13044:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"13049:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13040:3:6"},"nodeType":"YulFunctionCall","src":"13040:11:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13063:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"13068:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13059:3:6"},"nodeType":"YulFunctionCall","src":"13059:11:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13053:5:6"},"nodeType":"YulFunctionCall","src":"13053:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13033:6:6"},"nodeType":"YulFunctionCall","src":"13033:39:6"},"nodeType":"YulExpressionStatement","src":"13033:39:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12980:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"12983:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12977:2:6"},"nodeType":"YulFunctionCall","src":"12977:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12991:19:6","statements":[{"nodeType":"YulAssignment","src":"12993:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13002:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"13005:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12998:3:6"},"nodeType":"YulFunctionCall","src":"12998:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12993:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"12973:3:6","statements":[]},"src":"12969:113:6"},{"body":{"nodeType":"YulBlock","src":"13116:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13166:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"13171:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13162:3:6"},"nodeType":"YulFunctionCall","src":"13162:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"13180:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13155:6:6"},"nodeType":"YulFunctionCall","src":"13155:27:6"},"nodeType":"YulExpressionStatement","src":"13155:27:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13097:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"13100:6:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13094:2:6"},"nodeType":"YulFunctionCall","src":"13094:13:6"},"nodeType":"YulIf","src":"13091:101:6"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12922:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12927:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"12932:6:6","type":""}],"src":"12891:307:6"},{"body":{"nodeType":"YulBlock","src":"13247:238:6","statements":[{"nodeType":"YulVariableDeclaration","src":"13257:58:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13279:6:6"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13309:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13287:21:6"},"nodeType":"YulFunctionCall","src":"13287:27:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13275:3:6"},"nodeType":"YulFunctionCall","src":"13275:40:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"13261:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"13426:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13428:16:6"},"nodeType":"YulFunctionCall","src":"13428:18:6"},"nodeType":"YulExpressionStatement","src":"13428:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13369:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"13381:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13366:2:6"},"nodeType":"YulFunctionCall","src":"13366:34:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13405:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"13417:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13402:2:6"},"nodeType":"YulFunctionCall","src":"13402:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13363:2:6"},"nodeType":"YulFunctionCall","src":"13363:62:6"},"nodeType":"YulIf","src":"13360:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13464:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13468:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13457:6:6"},"nodeType":"YulFunctionCall","src":"13457:22:6"},"nodeType":"YulExpressionStatement","src":"13457:22:6"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13233:6:6","type":""},{"name":"size","nodeType":"YulTypedName","src":"13241:4:6","type":""}],"src":"13204:281:6"},{"body":{"nodeType":"YulBlock","src":"13525:142:6","statements":[{"nodeType":"YulAssignment","src":"13535:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13558:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13540:17:6"},"nodeType":"YulFunctionCall","src":"13540:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13535:1:6"}]},{"nodeType":"YulAssignment","src":"13569:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13592:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13574:17:6"},"nodeType":"YulFunctionCall","src":"13574:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13569:1:6"}]},{"body":{"nodeType":"YulBlock","src":"13616:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"13618:16:6"},"nodeType":"YulFunctionCall","src":"13618:18:6"},"nodeType":"YulExpressionStatement","src":"13618:18:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13613:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13606:6:6"},"nodeType":"YulFunctionCall","src":"13606:9:6"},"nodeType":"YulIf","src":"13603:35:6"},{"nodeType":"YulAssignment","src":"13647:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13656:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"13659:1:6"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"13652:3:6"},"nodeType":"YulFunctionCall","src":"13652:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"13647:1:6"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13514:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"13517:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13523:1:6","type":""}],"src":"13491:176:6"},{"body":{"nodeType":"YulBlock","src":"13701:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13718:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13721:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13711:6:6"},"nodeType":"YulFunctionCall","src":"13711:88:6"},"nodeType":"YulExpressionStatement","src":"13711:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13815:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13818:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13808:6:6"},"nodeType":"YulFunctionCall","src":"13808:15:6"},"nodeType":"YulExpressionStatement","src":"13808:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13839:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13842:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13832:6:6"},"nodeType":"YulFunctionCall","src":"13832:15:6"},"nodeType":"YulExpressionStatement","src":"13832:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13673:180:6"},{"body":{"nodeType":"YulBlock","src":"13887:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13904:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13907:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13897:6:6"},"nodeType":"YulFunctionCall","src":"13897:88:6"},"nodeType":"YulExpressionStatement","src":"13897:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14001:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14004:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13994:6:6"},"nodeType":"YulFunctionCall","src":"13994:15:6"},"nodeType":"YulExpressionStatement","src":"13994:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14025:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14028:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14018:6:6"},"nodeType":"YulFunctionCall","src":"14018:15:6"},"nodeType":"YulExpressionStatement","src":"14018:15:6"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"13859:180:6"},{"body":{"nodeType":"YulBlock","src":"14073:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14090:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14093:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14083:6:6"},"nodeType":"YulFunctionCall","src":"14083:88:6"},"nodeType":"YulExpressionStatement","src":"14083:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14187:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14190:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14180:6:6"},"nodeType":"YulFunctionCall","src":"14180:15:6"},"nodeType":"YulExpressionStatement","src":"14180:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14211:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14214:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14204:6:6"},"nodeType":"YulFunctionCall","src":"14204:15:6"},"nodeType":"YulExpressionStatement","src":"14204:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"14045:180:6"},{"body":{"nodeType":"YulBlock","src":"14259:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14276:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14279:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14269:6:6"},"nodeType":"YulFunctionCall","src":"14269:88:6"},"nodeType":"YulExpressionStatement","src":"14269:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14373:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14376:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14366:6:6"},"nodeType":"YulFunctionCall","src":"14366:15:6"},"nodeType":"YulExpressionStatement","src":"14366:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14397:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14400:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14390:6:6"},"nodeType":"YulFunctionCall","src":"14390:15:6"},"nodeType":"YulExpressionStatement","src":"14390:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14231:180:6"},{"body":{"nodeType":"YulBlock","src":"14445:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14462:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14465:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14455:6:6"},"nodeType":"YulFunctionCall","src":"14455:88:6"},"nodeType":"YulExpressionStatement","src":"14455:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14559:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14562:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14552:6:6"},"nodeType":"YulFunctionCall","src":"14552:15:6"},"nodeType":"YulExpressionStatement","src":"14552:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14583:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14586:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14576:6:6"},"nodeType":"YulFunctionCall","src":"14576:15:6"},"nodeType":"YulExpressionStatement","src":"14576:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14417:180:6"},{"body":{"nodeType":"YulBlock","src":"14692:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14709:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14712:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14702:6:6"},"nodeType":"YulFunctionCall","src":"14702:12:6"},"nodeType":"YulExpressionStatement","src":"14702:12:6"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"14603:117:6"},{"body":{"nodeType":"YulBlock","src":"14815:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14832:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14835:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14825:6:6"},"nodeType":"YulFunctionCall","src":"14825:12:6"},"nodeType":"YulExpressionStatement","src":"14825:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"14726:117:6"},{"body":{"nodeType":"YulBlock","src":"14938:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14955:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14958:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14948:6:6"},"nodeType":"YulFunctionCall","src":"14948:12:6"},"nodeType":"YulExpressionStatement","src":"14948:12:6"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"14849:117:6"},{"body":{"nodeType":"YulBlock","src":"15061:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15078:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15081:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15071:6:6"},"nodeType":"YulFunctionCall","src":"15071:12:6"},"nodeType":"YulExpressionStatement","src":"15071:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"14972:117:6"},{"body":{"nodeType":"YulBlock","src":"15184:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15201:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15204:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15194:6:6"},"nodeType":"YulFunctionCall","src":"15194:12:6"},"nodeType":"YulExpressionStatement","src":"15194:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"15095:117:6"},{"body":{"nodeType":"YulBlock","src":"15307:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15324:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15327:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15317:6:6"},"nodeType":"YulFunctionCall","src":"15317:12:6"},"nodeType":"YulExpressionStatement","src":"15317:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"15218:117:6"},{"body":{"nodeType":"YulBlock","src":"15389:54:6","statements":[{"nodeType":"YulAssignment","src":"15399:38:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15417:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"15424:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15413:3:6"},"nodeType":"YulFunctionCall","src":"15413:14:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15433:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15429:3:6"},"nodeType":"YulFunctionCall","src":"15429:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15409:3:6"},"nodeType":"YulFunctionCall","src":"15409:28:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15399:6:6"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15372:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"15382:6:6","type":""}],"src":"15341:102:6"},{"body":{"nodeType":"YulBlock","src":"15555:8:6","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15547:6:6","type":""}],"src":"15449:114:6"},{"body":{"nodeType":"YulBlock","src":"15627:62:6","statements":[{"body":{"nodeType":"YulBlock","src":"15661:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"15663:16:6"},"nodeType":"YulFunctionCall","src":"15663:18:6"},"nodeType":"YulExpressionStatement","src":"15663:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15650:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"15657:1:6","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15647:2:6"},"nodeType":"YulFunctionCall","src":"15647:12:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15640:6:6"},"nodeType":"YulFunctionCall","src":"15640:20:6"},"nodeType":"YulIf","src":"15637:46:6"}]},"name":"validator_assert_t_enum$_RaffleState_$248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15620:5:6","type":""}],"src":"15569:120:6"},{"body":{"nodeType":"YulBlock","src":"15738:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"15795:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15804:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15807:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15797:6:6"},"nodeType":"YulFunctionCall","src":"15797:12:6"},"nodeType":"YulExpressionStatement","src":"15797:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15761:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15786:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15768:17:6"},"nodeType":"YulFunctionCall","src":"15768:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15758:2:6"},"nodeType":"YulFunctionCall","src":"15758:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15751:6:6"},"nodeType":"YulFunctionCall","src":"15751:43:6"},"nodeType":"YulIf","src":"15748:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15731:5:6","type":""}],"src":"15695:122:6"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_enum$_RaffleState_$248_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_RaffleState_$248_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_enum$_RaffleState_$248__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_RaffleState_$248_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_RaffleState_$248(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_RaffleState_$248(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_enum$_RaffleState_$248_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_RaffleState_$248(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_assert_t_enum$_RaffleState_$248(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"78":[{"length":32,"start":836},{"length":32,"start":920}],"250":[{"length":32,"start":762},{"length":32,"start":1070}],"260":[{"length":32,"start":1681}],"262":[{"length":32,"start":1714}],"264":[{"length":32,"start":1749}],"279":[{"length":32,"start":2025},{"length":32,"start":2135}]},"linkReferences":{},"object":"6080604052600436106100c25760003560e01c80634585e33b1161007f57806391ad27b41161005957806391ad27b414610238578063c1c244e814610263578063e55ae4e81461028e578063fd6673f5146102cb576100c2565b80634585e33b146101a657806353a2c19a146101cf5780636e04ff0d146101fa576100c2565b806309bc33a7146100c7578063115cbaf5146100f257806312b536731461011d5780631fe543e3146101485780632a48a144146101715780632cfcc5391461019c575b600080fd5b3480156100d357600080fd5b506100dc6102f6565b6040516100e99190611070565b60405180910390f35b3480156100fe57600080fd5b5061010761031e565b6040516101149190611055565b60405180910390f35b34801561012957600080fd5b50610132610335565b60405161013f9190611070565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a9190610e49565b610342565b005b34801561017d57600080fd5b50610186610402565b6040516101939190610f8e565b60405180910390f35b6101a461042c565b005b3480156101b257600080fd5b506101cd60048036038101906101c89190610d59565b61059b565b005b3480156101db57600080fd5b506101e461079d565b6040516101f191906110c2565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190610da6565b6107a6565b60405161022f929190610fd2565b60405180910390f35b34801561024457600080fd5b5061024d610853565b60405161025a9190611070565b60405180910390f35b34801561026f57600080fd5b5061027861087b565b6040516102859190611070565b60405180910390f35b34801561029a57600080fd5b506102b560048036038101906102b09190610def565b610885565b6040516102c29190610f8e565b60405180910390f35b3480156102d757600080fd5b506102e06108cc565b6040516102ed9190611070565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600460009054906101000a900460ff16905090565b6000600361ffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f457337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016103eb929190610fa9565b60405180910390fd5b6103fe82826108d8565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f0000000000000000000000000000000000000000000000000000000000000000341015610486576040517f02b4eca700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600281111561049a57610499611365565b5b600460009054906101000a900460ff1660028111156104bc576104bb611365565b5b146104f3576040517fd6e19a8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b60006105b5604051806020016040528060008152506107a6565b509050806106245747600080549050600460009054906101000a900460ff1660028111156105e6576105e5611365565b5b6040517f584327aa00000000000000000000000000000000000000000000000000000000815260040161061b9392919061108b565b60405180910390fd5b6001600460006101000a81548160ff0219169083600281111561064a57610649611365565b5b02179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b8152600401610716959493929190611002565b602060405180830381600087803b15801561073057600080fd5b505af1158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610e1c565b9050807fffa0c7626c3036061bbaafb595bc260929d35405feead367254dd7ca04ed75e960405160405180910390a250505050565b60006001905090565b600060606000600460009054906101000a900460ff1660028111156107ce576107cd611365565b5b600060028111156107e2576107e1611365565b5b14905060007f0000000000000000000000000000000000000000000000000000000000000000600554426108169190611186565b119050600080600080549050119050600080471190508380156108365750825b801561083f5750805b80156108485750815b955050505050915091565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600554905090565b600080828154811061089a57610899611394565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008080549050905090565b60008080549050826000815181106108f3576108f2611394565b5b602002602001015161090591906112d6565b9050600080828154811061091c5761091b611394565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460006101000a81548160ff021916908360028111156109b0576109af611365565b5b0217905550600067ffffffffffffffff8111156109d0576109cf6113c3565b5b6040519080825280602002602001820160405280156109fe5781602001602082028036833780820191505090505b5060009080519060200190610a14929190610b24565b5060008173ffffffffffffffffffffffffffffffffffffffff1647604051610a3b90610f79565b60006040518083038185875af1925050503d8060008114610a78576040519150601f19603f3d011682016040523d82523d6000602084013e610a7d565b606091505b5050905080610ab8576040517fba31c4f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f82335e265462fa57d652059024a95775025cab4c06b62b17f8c9dd289ce4b8fd60405160405180910390a25050505050565b828054828255906000526020600020908101928215610b9d579160200282015b82811115610b9c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b44565b5b509050610baa9190610bae565b5090565b5b80821115610bc7576000816000905550600101610baf565b5090565b6000610bde610bd984611102565b6110dd565b90508083825260208201905082856020860282011115610c0157610c006113fc565b5b60005b85811015610c315781610c178882610d2f565b845260208401935060208301925050600181019050610c04565b5050509392505050565b6000610c4e610c498461112e565b6110dd565b905082815260208101848484011115610c6a57610c69611401565b5b610c75848285611263565b509392505050565b600082601f830112610c9257610c916113f7565b5b8135610ca2848260208601610bcb565b91505092915050565b60008083601f840112610cc157610cc06113f7565b5b8235905067ffffffffffffffff811115610cde57610cdd6113f2565b5b602083019150836001820283011115610cfa57610cf96113fc565b5b9250929050565b600082601f830112610d1657610d156113f7565b5b8135610d26848260208601610c3b565b91505092915050565b600081359050610d3e81611438565b92915050565b600081519050610d5381611438565b92915050565b60008060208385031215610d7057610d6f61140b565b5b600083013567ffffffffffffffff811115610d8e57610d8d611406565b5b610d9a85828601610cab565b92509250509250929050565b600060208284031215610dbc57610dbb61140b565b5b600082013567ffffffffffffffff811115610dda57610dd9611406565b5b610de684828501610d01565b91505092915050565b600060208284031215610e0557610e0461140b565b5b6000610e1384828501610d2f565b91505092915050565b600060208284031215610e3257610e3161140b565b5b6000610e4084828501610d44565b91505092915050565b60008060408385031215610e6057610e5f61140b565b5b6000610e6e85828601610d2f565b925050602083013567ffffffffffffffff811115610e8f57610e8e611406565b5b610e9b85828601610c7d565b9150509250929050565b610eae816111ba565b82525050565b610ebd816111cc565b82525050565b610ecc816111d8565b82525050565b6000610edd8261115f565b610ee7818561116a565b9350610ef7818560208601611272565b610f0081611410565b840191505092915050565b610f1481611251565b82525050565b6000610f2760008361117b565b9150610f3282611421565b600082019050919050565b610f46816111f5565b82525050565b610f5581611223565b82525050565b610f648161122d565b82525050565b610f738161123d565b82525050565b6000610f8482610f1a565b9150819050919050565b6000602082019050610fa36000830184610ea5565b92915050565b6000604082019050610fbe6000830185610ea5565b610fcb6020830184610ea5565b9392505050565b6000604082019050610fe76000830185610eb4565b8181036020830152610ff98184610ed2565b90509392505050565b600060a0820190506110176000830188610ec3565b6110246020830187610f6a565b6110316040830186610f3d565b61103e6060830185610f5b565b61104b6080830184610f5b565b9695505050505050565b600060208201905061106a6000830184610f0b565b92915050565b60006020820190506110856000830184610f4c565b92915050565b60006060820190506110a06000830186610f4c565b6110ad6020830185610f4c565b6110ba6040830184610f4c565b949350505050565b60006020820190506110d76000830184610f5b565b92915050565b60006110e76110f8565b90506110f382826112a5565b919050565b6000604051905090565b600067ffffffffffffffff82111561111d5761111c6113c3565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611149576111486113c3565b5b61115282611410565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061119182611223565b915061119c83611223565b9250828210156111af576111ae611307565b5b828203905092915050565b60006111c582611203565b9050919050565b60008115159050919050565b6000819050919050565b60008190506111f082611424565b919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600061125c826111e2565b9050919050565b82818337600083830152505050565b60005b83811015611290578082015181840152602081019050611275565b8381111561129f576000848401525b50505050565b6112ae82611410565b810181811067ffffffffffffffff821117156112cd576112cc6113c3565b5b80604052505050565b60006112e182611223565b91506112ec83611223565b9250826112fc576112fb611336565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b6003811061143557611434611365565b5b50565b61144181611223565b811461144c57600080fd5b5056fea2646970667358221220189071c74fe8f36f2d30073566f75e7fc8fde0e65f60af314286922c6fdd8c2864736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4585E33B GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xC1C244E8 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x2CB JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1FA JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x12B53673 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x2A48A144 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x342 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH2 0x42C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP3 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F4 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP3 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FE DUP3 DUP3 PUSH2 0x8D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2B4ECA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x1365 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD6E19A8D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7A6 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x624 JUMPI SELFBALANCE PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5E6 JUMPI PUSH2 0x5E5 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x584327AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x64A JUMPI PUSH2 0x649 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x716 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x744 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x768 SWAP2 SWAP1 PUSH2 0xE1C JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xFFA0C7626C3036061BBAAFB595BC260929D35405FEEAD367254DD7CA04ED75E9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7CE JUMPI PUSH2 0x7CD PUSH2 0x1365 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7E2 JUMPI PUSH2 0x7E1 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x816 SWAP2 SWAP1 PUSH2 0x1186 JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x836 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x83F JUMPI POP DUP1 JUMPDEST DUP1 ISZERO PUSH2 0x848 JUMPI POP DUP2 JUMPDEST SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x89A JUMPI PUSH2 0x899 PUSH2 0x1394 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0x1394 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x91C JUMPI PUSH2 0x91B PUSH2 0x1394 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9B0 JUMPI PUSH2 0x9AF PUSH2 0x1365 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9D0 JUMPI PUSH2 0x9CF PUSH2 0x13C3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9FE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA14 SWAP3 SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xA3B SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBA31C4F300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82335E265462FA57D652059024A95775025CAB4C06B62B17F8C9DD289CE4B8FD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xB9D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB9C JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB44 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xBAF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDE PUSH2 0xBD9 DUP5 PUSH2 0x1102 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xC01 JUMPI PUSH2 0xC00 PUSH2 0x13FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC31 JUMPI DUP2 PUSH2 0xC17 DUP9 DUP3 PUSH2 0xD2F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC04 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4E PUSH2 0xC49 DUP5 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC6A JUMPI PUSH2 0xC69 PUSH2 0x1401 JUMP JUMPDEST JUMPDEST PUSH2 0xC75 DUP5 DUP3 DUP6 PUSH2 0x1263 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0x13F7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xBCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCC1 JUMPI PUSH2 0xCC0 PUSH2 0x13F7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCDE JUMPI PUSH2 0xCDD PUSH2 0x13F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCFA JUMPI PUSH2 0xCF9 PUSH2 0x13FC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD16 JUMPI PUSH2 0xD15 PUSH2 0x13F7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD26 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD3E DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD53 DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD70 JUMPI PUSH2 0xD6F PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH2 0xD9A DUP6 DUP3 DUP7 ADD PUSH2 0xCAB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDDA JUMPI PUSH2 0xDD9 PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH2 0xDE6 DUP5 DUP3 DUP6 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE05 JUMPI PUSH2 0xE04 PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE13 DUP5 DUP3 DUP6 ADD PUSH2 0xD2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP5 DUP3 DUP6 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH2 0xE5F PUSH2 0x140B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE6E DUP6 DUP3 DUP7 ADD PUSH2 0xD2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE8F JUMPI PUSH2 0xE8E PUSH2 0x1406 JUMP JUMPDEST JUMPDEST PUSH2 0xE9B DUP6 DUP3 DUP7 ADD PUSH2 0xC7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAE DUP2 PUSH2 0x11BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEBD DUP2 PUSH2 0x11CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xECC DUP2 PUSH2 0x11D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEDD DUP3 PUSH2 0x115F JUMP JUMPDEST PUSH2 0xEE7 DUP2 DUP6 PUSH2 0x116A JUMP JUMPDEST SWAP4 POP PUSH2 0xEF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1272 JUMP JUMPDEST PUSH2 0xF00 DUP2 PUSH2 0x1410 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF14 DUP2 PUSH2 0x1251 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 PUSH1 0x0 DUP4 PUSH2 0x117B JUMP JUMPDEST SWAP2 POP PUSH2 0xF32 DUP3 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0x11F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF55 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF64 DUP2 PUSH2 0x122D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF73 DUP2 PUSH2 0x123D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF84 DUP3 PUSH2 0xF1A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFBE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xFCB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEB4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xFF9 DUP2 DUP5 PUSH2 0xED2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1017 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x1024 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x1031 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xF3D JUMP JUMPDEST PUSH2 0x103E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x104B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x106A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1085 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10A0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x10AD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x10BA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF4C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E7 PUSH2 0x10F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F3 DUP3 DUP3 PUSH2 0x12A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111C PUSH2 0x13C3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1149 JUMPI PUSH2 0x1148 PUSH2 0x13C3 JUMP JUMPDEST JUMPDEST PUSH2 0x1152 DUP3 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1191 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x119C DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x11AF JUMPI PUSH2 0x11AE PUSH2 0x1307 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C5 DUP3 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x11F0 DUP3 PUSH2 0x1424 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125C DUP3 PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1290 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1275 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x129F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x12AE DUP3 PUSH2 0x1410 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12CC PUSH2 0x13C3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E1 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x12EC DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12FC JUMPI PUSH2 0x12FB PUSH2 0x1336 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x1365 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x1441 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP2 EQ PUSH2 0x144C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR SWAP1 PUSH18 0xC74FE8F36F2D30073566F75E7FC8FDE0E65F PUSH1 0xAF BALANCE TIMESTAMP DUP7 SWAP3 0x2C PUSH16 0xDD8C2864736F6C634300080700330000 ","sourceMap":"721:5679:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5444:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5754:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5986:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6794:256:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5653:95:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2398:404;;;:::i;:::-;;2952:724;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5895:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4862:576;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6311:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6208:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5543:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6102:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5444:93;5491:7;5517:13;5510:20;;5444:93;:::o;5754:97::-;5801:11;5831:13;;;;;;;;;;;5824:20;;5754:97;:::o;5986:110::-;6042:7;1314:1;6061:28;;;;5986:110;:::o;6794:256:3:-;6907:14;6893:28;;:10;:28;;;6889:109;;6964:10;6976:14;6938:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6889:109;7003:42;7022:9;7033:11;7003:18;:42::i;:::-;6794:256;;:::o;5653:95:5:-;5701:7;5727:14;;;;;;;;;;;5720:21;;5653:95;:::o;2398:404::-;2513:13;2501:9;:25;2497:91;;;2549:28;;;;;;;;;;;;;;2497:91;2618:16;2601:33;;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;2597:87;;2657:16;;;;;;;;;;;;;;2597:87;2693:9;2716:10;2693:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:10;2772:23;;;;;;;;;;;;2398:404::o;2952:724::-;3089:17;3112:15;;;;;;;;;;;;;:11;:15::i;:::-;3088:39;;;3142:12;3137:201;;3218:21;3257:9;:16;;;;3299:13;;;;;;;;;;;3291:22;;;;;;;;:::i;:::-;;3177:150;;;;;;;;;;;;;:::i;:::-;;;;;;;;3137:201;3363:23;3347:13;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3396:17;3416:16;;;;;;;;;;;:35;;;3465:9;3488:16;1314:1;3553:18;1357:1;3416:188;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3396:208;;3659:9;3642:27;;;;;;;;;;3027:649;;2952:724;;:::o;5895:85::-;5939:6;1357:1;5957:16;;5895:85;:::o;4862:576::-;4957:17;4976:12;5130:11;5165:13;;;;;;;;;;;5145:33;;;;;;;;:::i;:::-;;:16;:33;;;;;;;;:::i;:::-;;;5130:49;;5189:15;5245:10;5226:15;;5208;:33;;;;:::i;:::-;5207:48;5189:66;;5265:15;5303:1;5284:9;:16;;;;:20;5265:40;;5315:14;5356:1;5332:21;:25;5315:42;;5383:6;:20;;;;;5393:10;5383:20;:33;;;;;5407:9;5383:33;:47;;;;;5420:10;5383:47;5367:64;;5008:430;;;;4862:576;;;:::o;6311:87::-;6355:7;6381:10;6374:17;;6311:87;:::o;6208:97::-;6257:7;6283:15;;6276:22;;6208:97;:::o;5543:104::-;5598:7;5624:9;5634:5;5624:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5617:23;;5543:104;;;:::o;6102:100::-;6153:7;6179:9;:16;;;;6172:23;;6102:100;:::o;3804:749::-;3982:21;4023:9;:16;;;;4006:11;4018:1;4006:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;3982:57;;4049:28;4080:9;4090:13;4080:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4049:55;;4131:12;4114:14;;:29;;;;;;;;;;;;;;;;;;4169:16;4153:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4229:1;4207:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4195:9;:36;;;;;;;;;;;;:::i;:::-;;4292:12;4310;:17;;4335:21;4310:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4291:70;;;4411:7;4406:69;;4441:23;;;;;;;;;;;;;;4406:69;4531:14;;;;;;;;;;;4512:34;;;;;;;;;;;;3925:628;;;3804:749;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:6:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1185:370::-;1256:5;1305:3;1298:4;1290:6;1286:17;1282:27;1272:122;;1313:79;;:::i;:::-;1272:122;1430:6;1417:20;1455:94;1545:3;1537:6;1530:4;1522:6;1518:17;1455:94;:::i;:::-;1446:103;;1262:293;1185:370;;;;:::o;1574:552::-;1631:8;1641:6;1691:3;1684:4;1676:6;1672:17;1668:27;1658:122;;1699:79;;:::i;:::-;1658:122;1812:6;1799:20;1789:30;;1842:18;1834:6;1831:30;1828:117;;;1864:79;;:::i;:::-;1828:117;1978:4;1970:6;1966:17;1954:29;;2032:3;2024:4;2016:6;2012:17;2002:8;1998:32;1995:41;1992:128;;;2039:79;;:::i;:::-;1992:128;1574:552;;;;;:::o;2145:338::-;2200:5;2249:3;2242:4;2234:6;2230:17;2226:27;2216:122;;2257:79;;:::i;:::-;2216:122;2374:6;2361:20;2399:78;2473:3;2465:6;2458:4;2450:6;2446:17;2399:78;:::i;:::-;2390:87;;2206:277;2145:338;;;;:::o;2489:139::-;2535:5;2573:6;2560:20;2551:29;;2589:33;2616:5;2589:33;:::i;:::-;2489:139;;;;:::o;2634:143::-;2691:5;2722:6;2716:13;2707:22;;2738:33;2765:5;2738:33;:::i;:::-;2634:143;;;;:::o;2783:527::-;2853:6;2861;2910:2;2898:9;2889:7;2885:23;2881:32;2878:119;;;2916:79;;:::i;:::-;2878:119;3064:1;3053:9;3049:17;3036:31;3094:18;3086:6;3083:30;3080:117;;;3116:79;;:::i;:::-;3080:117;3229:64;3285:7;3276:6;3265:9;3261:22;3229:64;:::i;:::-;3211:82;;;;3007:296;2783:527;;;;;:::o;3316:507::-;3384:6;3433:2;3421:9;3412:7;3408:23;3404:32;3401:119;;;3439:79;;:::i;:::-;3401:119;3587:1;3576:9;3572:17;3559:31;3617:18;3609:6;3606:30;3603:117;;;3639:79;;:::i;:::-;3603:117;3744:62;3798:7;3789:6;3778:9;3774:22;3744:62;:::i;:::-;3734:72;;3530:286;3316:507;;;;:::o;3829:329::-;3888:6;3937:2;3925:9;3916:7;3912:23;3908:32;3905:119;;;3943:79;;:::i;:::-;3905:119;4063:1;4088:53;4133:7;4124:6;4113:9;4109:22;4088:53;:::i;:::-;4078:63;;4034:117;3829:329;;;;:::o;4164:351::-;4234:6;4283:2;4271:9;4262:7;4258:23;4254:32;4251:119;;;4289:79;;:::i;:::-;4251:119;4409:1;4434:64;4490:7;4481:6;4470:9;4466:22;4434:64;:::i;:::-;4424:74;;4380:128;4164:351;;;;:::o;4521:684::-;4614:6;4622;4671:2;4659:9;4650:7;4646:23;4642:32;4639:119;;;4677:79;;:::i;:::-;4639:119;4797:1;4822:53;4867:7;4858:6;4847:9;4843:22;4822:53;:::i;:::-;4812:63;;4768:117;4952:2;4941:9;4937:18;4924:32;4983:18;4975:6;4972:30;4969:117;;;5005:79;;:::i;:::-;4969:117;5110:78;5180:7;5171:6;5160:9;5156:22;5110:78;:::i;:::-;5100:88;;4895:303;4521:684;;;;;:::o;5211:118::-;5298:24;5316:5;5298:24;:::i;:::-;5293:3;5286:37;5211:118;;:::o;5335:109::-;5416:21;5431:5;5416:21;:::i;:::-;5411:3;5404:34;5335:109;;:::o;5450:118::-;5537:24;5555:5;5537:24;:::i;:::-;5532:3;5525:37;5450:118;;:::o;5574:360::-;5660:3;5688:38;5720:5;5688:38;:::i;:::-;5742:70;5805:6;5800:3;5742:70;:::i;:::-;5735:77;;5821:52;5866:6;5861:3;5854:4;5847:5;5843:16;5821:52;:::i;:::-;5898:29;5920:6;5898:29;:::i;:::-;5893:3;5889:39;5882:46;;5664:270;5574:360;;;;:::o;5940:157::-;6040:50;6084:5;6040:50;:::i;:::-;6035:3;6028:63;5940:157;;:::o;6103:398::-;6262:3;6283:83;6364:1;6359:3;6283:83;:::i;:::-;6276:90;;6375:93;6464:3;6375:93;:::i;:::-;6493:1;6488:3;6484:11;6477:18;;6103:398;;;:::o;6507:115::-;6592:23;6609:5;6592:23;:::i;:::-;6587:3;6580:36;6507:115;;:::o;6628:118::-;6715:24;6733:5;6715:24;:::i;:::-;6710:3;6703:37;6628:118;;:::o;6752:115::-;6837:23;6854:5;6837:23;:::i;:::-;6832:3;6825:36;6752:115;;:::o;6873:::-;6958:23;6975:5;6958:23;:::i;:::-;6953:3;6946:36;6873:115;;:::o;6994:379::-;7178:3;7200:147;7343:3;7200:147;:::i;:::-;7193:154;;7364:3;7357:10;;6994:379;;;:::o;7379:222::-;7472:4;7510:2;7499:9;7495:18;7487:26;;7523:71;7591:1;7580:9;7576:17;7567:6;7523:71;:::i;:::-;7379:222;;;;:::o;7607:332::-;7728:4;7766:2;7755:9;7751:18;7743:26;;7779:71;7847:1;7836:9;7832:17;7823:6;7779:71;:::i;:::-;7860:72;7928:2;7917:9;7913:18;7904:6;7860:72;:::i;:::-;7607:332;;;;;:::o;7945:407::-;8078:4;8116:2;8105:9;8101:18;8093:26;;8129:65;8191:1;8180:9;8176:17;8167:6;8129:65;:::i;:::-;8241:9;8235:4;8231:20;8226:2;8215:9;8211:18;8204:48;8269:76;8340:4;8331:6;8269:76;:::i;:::-;8261:84;;7945:407;;;;;:::o;8358:648::-;8555:4;8593:3;8582:9;8578:19;8570:27;;8607:71;8675:1;8664:9;8660:17;8651:6;8607:71;:::i;:::-;8688:70;8754:2;8743:9;8739:18;8730:6;8688:70;:::i;:::-;8768;8834:2;8823:9;8819:18;8810:6;8768:70;:::i;:::-;8848;8914:2;8903:9;8899:18;8890:6;8848:70;:::i;:::-;8928:71;8994:3;8983:9;8979:19;8970:6;8928:71;:::i;:::-;8358:648;;;;;;;;:::o;9012:248::-;9118:4;9156:2;9145:9;9141:18;9133:26;;9169:84;9250:1;9239:9;9235:17;9226:6;9169:84;:::i;:::-;9012:248;;;;:::o;9266:222::-;9359:4;9397:2;9386:9;9382:18;9374:26;;9410:71;9478:1;9467:9;9463:17;9454:6;9410:71;:::i;:::-;9266:222;;;;:::o;9494:442::-;9643:4;9681:2;9670:9;9666:18;9658:26;;9694:71;9762:1;9751:9;9747:17;9738:6;9694:71;:::i;:::-;9775:72;9843:2;9832:9;9828:18;9819:6;9775:72;:::i;:::-;9857;9925:2;9914:9;9910:18;9901:6;9857:72;:::i;:::-;9494:442;;;;;;:::o;9942:218::-;10033:4;10071:2;10060:9;10056:18;10048:26;;10084:69;10150:1;10139:9;10135:17;10126:6;10084:69;:::i;:::-;9942:218;;;;:::o;10166:129::-;10200:6;10227:20;;:::i;:::-;10217:30;;10256:33;10284:4;10276:6;10256:33;:::i;:::-;10166:129;;;:::o;10301:75::-;10334:6;10367:2;10361:9;10351:19;;10301:75;:::o;10382:311::-;10459:4;10549:18;10541:6;10538:30;10535:56;;;10571:18;;:::i;:::-;10535:56;10621:4;10613:6;10609:17;10601:25;;10681:4;10675;10671:15;10663:23;;10382:311;;;:::o;10699:307::-;10760:4;10850:18;10842:6;10839:30;10836:56;;;10872:18;;:::i;:::-;10836:56;10910:29;10932:6;10910:29;:::i;:::-;10902:37;;10994:4;10988;10984:15;10976:23;;10699:307;;;:::o;11012:98::-;11063:6;11097:5;11091:12;11081:22;;11012:98;;;:::o;11116:168::-;11199:11;11233:6;11228:3;11221:19;11273:4;11268:3;11264:14;11249:29;;11116:168;;;;:::o;11290:147::-;11391:11;11428:3;11413:18;;11290:147;;;;:::o;11443:191::-;11483:4;11503:20;11521:1;11503:20;:::i;:::-;11498:25;;11537:20;11555:1;11537:20;:::i;:::-;11532:25;;11576:1;11573;11570:8;11567:34;;;11581:18;;:::i;:::-;11567:34;11626:1;11623;11619:9;11611:17;;11443:191;;;;:::o;11640:96::-;11677:7;11706:24;11724:5;11706:24;:::i;:::-;11695:35;;11640:96;;;:::o;11742:90::-;11776:7;11819:5;11812:13;11805:21;11794:32;;11742:90;;;:::o;11838:77::-;11875:7;11904:5;11893:16;;11838:77;;;:::o;11921:141::-;11973:7;12002:5;11991:16;;12008:48;12050:5;12008:48;:::i;:::-;11921:141;;;:::o;12068:89::-;12104:7;12144:6;12137:5;12133:18;12122:29;;12068:89;;;:::o;12163:126::-;12200:7;12240:42;12233:5;12229:54;12218:65;;12163:126;;;:::o;12295:77::-;12332:7;12361:5;12350:16;;12295:77;;;:::o;12378:93::-;12414:7;12454:10;12447:5;12443:22;12432:33;;12378:93;;;:::o;12477:101::-;12513:7;12553:18;12546:5;12542:30;12531:41;;12477:101;;;:::o;12584:141::-;12647:9;12680:39;12713:5;12680:39;:::i;:::-;12667:52;;12584:141;;;:::o;12731:154::-;12815:6;12810:3;12805;12792:30;12877:1;12868:6;12863:3;12859:16;12852:27;12731:154;;;:::o;12891:307::-;12959:1;12969:113;12983:6;12980:1;12977:13;12969:113;;;13068:1;13063:3;13059:11;13053:18;13049:1;13044:3;13040:11;13033:39;13005:2;13002:1;12998:10;12993:15;;12969:113;;;13100:6;13097:1;13094:13;13091:101;;;13180:1;13171:6;13166:3;13162:16;13155:27;13091:101;12940:258;12891:307;;;:::o;13204:281::-;13287:27;13309:4;13287:27;:::i;:::-;13279:6;13275:40;13417:6;13405:10;13402:22;13381:18;13369:10;13366:34;13363:62;13360:88;;;13428:18;;:::i;:::-;13360:88;13468:10;13464:2;13457:22;13247:238;13204:281;;:::o;13491:176::-;13523:1;13540:20;13558:1;13540:20;:::i;:::-;13535:25;;13574:20;13592:1;13574:20;:::i;:::-;13569:25;;13613:1;13603:35;;13618:18;;:::i;:::-;13603:35;13659:1;13656;13652:9;13647:14;;13491:176;;;;:::o;13673:180::-;13721:77;13718:1;13711:88;13818:4;13815:1;13808:15;13842:4;13839:1;13832:15;13859:180;13907:77;13904:1;13897:88;14004:4;14001:1;13994:15;14028:4;14025:1;14018:15;14045:180;14093:77;14090:1;14083:88;14190:4;14187:1;14180:15;14214:4;14211:1;14204:15;14231:180;14279:77;14276:1;14269:88;14376:4;14373:1;14366:15;14400:4;14397:1;14390:15;14417:180;14465:77;14462:1;14455:88;14562:4;14559:1;14552:15;14586:4;14583:1;14576:15;14603:117;14712:1;14709;14702:12;14726:117;14835:1;14832;14825:12;14849:117;14958:1;14955;14948:12;14972:117;15081:1;15078;15071:12;15095:117;15204:1;15201;15194:12;15218:117;15327:1;15324;15317:12;15341:102;15382:6;15433:2;15429:7;15424:2;15417:5;15413:14;15409:28;15399:38;;15341:102;;;:::o;15449:114::-;;:::o;15569:120::-;15657:1;15650:5;15647:12;15637:46;;15663:18;;:::i;:::-;15637:46;15569:120;:::o;15695:122::-;15768:24;15786:5;15768:24;:::i;:::-;15761:5;15758:35;15748:63;;15807:1;15804;15797:12;15748:63;15695:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1050600","executionCost":"infinite","totalCost":"infinite"},"external":{"checkUpkeep(bytes)":"infinite","enterRaffle()":"infinite","getEntranceFee()":"infinite","getInterval()":"infinite","getLastTimeStamp()":"2481","getNumWords()":"388","getNumberOfPlayers()":"2533","getPlayer(uint256)":"5033","getRaffleState()":"2591","getRecentWinter()":"2611","getRequestConfirmatison()":"388","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","enterRaffle()":"2cfcc539","getEntranceFee()":"09bc33a7","getInterval()":"91ad27b4","getLastTimeStamp()":"c1c244e8","getNumWords()":"53a2c19a","getNumberOfPlayers()":"fd6673f5","getPlayer(uint256)":"e55ae4e8","getRaffleState()":"115cbaf5","getRecentWinter()":"2a48a144","getRequestConfirmatison()":"12b53673","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle_NotEnoughETHnetered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle_NotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle_TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPlayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffleState\",\"type\":\"uint256\"}],\"name\":\"Raffle__UpkeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffleEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"RandomWordsFulfill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RandowWinnerPick\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffleState\",\"outputs\":[{\"internalType\":\"enum Raffle.RaffleState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfirmatison\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"\\u6b63\\u786e\\u4f7f\\u7528\\u5230 chainlink \\u7ef4\\u62a4\\u5408\\u7ea6\\u5b9a\\u65f6\\u4efb\\u52a1-- \\u662f\\u5426\\u89e6\\u53d1\\u4f18\\u80dc\\u8005 1 : \\u65f6\\u95f4\\u95f4\\u9694\\u5904\\u7406\\u65b9\\u5f0f 2 \\uff1a\\u5408\\u7ea6\\u7cfb\\u7edf\\u4e2d\\u81f3\\u5c11\\u6709\\u4e00\\u4f4d\\u73a9\\u5bb6\\u5e76\\u4e14\\u6709 eth 3 \\uff1a \\u8ba2\\u9605\\u4e2d\\u6ce8\\u5165\\u4e86 link\\u8d44\\u91d1 4 \\uff1a \\u6211\\u4eec\\u5408\\u7ea6\\u5956\\u6c60\\u5e94\\u8be5\\u662f\\u5904\\u4e8e\\u5f00\\u542f\\u72b6\\u6001\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function _preventExecution() internal view {\\n    // solhint-disable-next-line avoid-tx-origin\\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    _preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AutomationBase} from \\\"./AutomationBase.sol\\\";\\nimport {AutomationCompatibleInterface} from \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"contracts/Raffle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\\\";\\n\\nerror Raffle__UpkeepNotNeeded(uint256 currentBalance, uint256 numPlayers, uint256 raffleState);\\nerror Raffle_NotEnoughETHnetered();\\nerror Raffle_TransferFailed();\\nerror Raffle_NotOpen();\\n\\n// \\u8fdb\\u5165\\u5f69\\u7968\\u7ade\\u9009 \\uff08\\u652f\\u4ed8\\u4e00\\u4e9b\\u91d1\\u989d\\uff09\\n// \\u968f\\u673a\\u4e00\\u540d\\u4f18\\u80dc\\u8005\\n// \\u667a\\u80fd\\u5408\\u7ea6 \\u6700\\u5c11\\u7ef4\\u62a4\\n/***\\n * @notice \\u672c\\u5408\\u7ea6\\u65e8\\u5728\\u521b\\u5efa\\u4e00\\u4e2a\\u4e0d\\u53ef\\u7be1\\u6539\\u7684\\u53bb\\u4e2d\\u5fc3\\u5316\\u667a\\u80fd\\u5408\\u7ea6\\n * @dev \\u5b9e\\u73b0\\u4e86 chainlink VRF v2 \\u4ee5\\u53ca chainlink keepers\\n */\\ncontract Raffle is VRFConsumerBaseV2, AutomationCompatible {\\n    /**\\n     * @dev\\n     */\\n    enum RaffleState {\\n        OPEN,\\n        CALCULATING,\\n        CLOSED\\n    }\\n\\n    //\\u6700\\u4f4e\\u4ef7\\u683c\\n    uint256 private immutable i_entranceFee;\\n    //\\u73a9\\u5bb6\\n    address payable[] private s_players;\\n\\n    address private s_recentWinter;\\n    //\\u5582\\u4ef7\\n    VRFCoordinatorV2Interface i_vrfCoordinator;\\n    //\\u6700\\u5927gas\\u8d39\\n    bytes32 private immutable i_gasLane;\\n    uint64 private immutable s_subscriptionId;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant NUM_WORDS = 1;\\n\\n    // \\u5408\\u7ea6\\u5956\\u6c60\\u72b6\\u6001\\n    uint256 private s_state;\\n    RaffleState private s_raffleState;\\n    //\\u6700\\u65b0block\\u65f6\\u95f4\\n    uint256 private s_lastTimeStamp;\\n    // \\u6bcf\\u6b21\\u5956\\u91d1\\u9886\\u53d6\\u65f6\\u95f4\\u95f4\\u9694\\n    uint256 private immutable i_interval;\\n\\n    //\\u4e8b\\u4ef6 \\u547d\\u540d\\u4e0e\\u51fd\\u6570\\u76f8\\u53cd\\n    event RaffleEnter(address indexed player);\\n    event RandowWinnerPick(uint256 indexed requestId);\\n    event RandomWordsFulfill(address indexed winner);\\n\\n    constructor(\\n        address vrfCoordinatorV2, // \\u5408\\u7ea6\\u5730\\u5740\\n        uint256 entranceFee,\\n        bytes32 gasLane,\\n        uint64 subscriptionId,\\n        uint32 callbackGasLimit,\\n        uint256 interval\\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) {\\n        i_entranceFee = entranceFee;\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        i_gasLane = gasLane;\\n        s_subscriptionId = subscriptionId;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_raffleState = RaffleState.OPEN;\\n        s_lastTimeStamp = block.timestamp;\\n        i_interval = interval;\\n    }\\n\\n    function enterRaffle() public payable {\\n        // \\u94b1\\u5305\\u4f59\\u989d\\u5fc5\\u987b\\u5927\\u4e8e\\u6700\\u4f4e\\u8bbe\\u5b9a\\u503c\\n        if (msg.value < i_entranceFee) {\\n            revert Raffle_NotEnoughETHnetered();\\n        }\\n        if (s_raffleState != RaffleState.OPEN) {\\n            revert Raffle_NotOpen();\\n        }\\n        s_players.push(payable(msg.sender));\\n        //\\u89e6\\u53d1\\u5408\\u7ea6\\u4e8b\\u4ef6\\n        emit RaffleEnter(msg.sender);\\n    }\\n\\n    //\\u83b7\\u53d6\\u968f\\u673a\\u8d62\\u5bb6\\n    // external \\u5916\\u90e8\\u51fd\\u6570\\u53ef\\u4ee5\\u4ece\\u5408\\u7ea6\\u5916\\u90e8\\u8c03\\u7528\\uff0c\\u4f46\\u4e0d\\u80fd\\u4ece\\u5408\\u7ea6\\u5185\\u90e8\\u8c03\\u7528\\u6216\\u8005\\u88ab\\u5176\\u4ed6\\u5408\\u7ea6\\u7ee7\\u627f\\u3002\\n    function performUpkeep(bytes calldata /* performData */) external override {\\n        //\\u8bf7\\u6c42\\u968f\\u673a\\u6570\\n        // chainlink VRF\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\n        if (!upkeepNeeded) {\\n            revert Raffle__UpkeepNotNeeded(\\n                address(this).balance,\\n                s_players.length,\\n                uint256(s_raffleState)\\n            );\\n        }\\n        s_raffleState = RaffleState.CALCULATING;\\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\\n            i_gasLane,\\n            s_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS\\n        );\\n        //\\u89e6\\u53d1\\u4e8b\\u4ef6\\n        emit RandowWinnerPick(requestId);\\n    }\\n\\n    // \\u4ece chainlink \\u83b7\\u53d6\\u968f\\u673a\\u6570\\u5e76\\u8fd4\\u56de\\n    // internal\\uff1a\\u53ea\\u80fd\\u4ece\\u5f53\\u524d\\u5408\\u7ea6\\u5185\\u90e8\\u6216\\u7ee7\\u627f\\u7684\\u5408\\u7ea6\\u4e2d\\u8bbf\\u95ee\\u3002\\n    function fulfillRandomWords(\\n        uint256 /*requestId*/,\\n        uint256[] memory randomWords\\n    ) internal override {\\n        //\\u4ece\\u53c2\\u52a0\\u7528\\u6237\\u6570\\u636e\\u83b7\\u53d6\\u968f\\u673a\\u503c\\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\\n        address payable recentWinter = s_players[indexOfWinner];\\n        s_recentWinter = recentWinter;\\n        s_raffleState = RaffleState.OPEN;\\n        s_players = new address payable[](0);\\n        //\\u83b7\\u53d6\\u6e38\\u620f\\u8d62\\u5bb6\\u540e\\u8fdb\\u884c\\u8f6c\\u8d26\\u4ea4\\u6613\\n        (bool success, ) = recentWinter.call{value: address(this).balance}(\\\"\\\");\\n        //\\u5224\\u65ad\\u4ea4\\u6613\\u662f\\u5426\\u6210\\u529f\\n        if (!success) {\\n            revert Raffle_TransferFailed();\\n        }\\n        //\\u89e6\\u53d1\\u4e8b\\u4ef6\\n        emit RandomWordsFulfill(s_recentWinter);\\n    }\\n\\n    /**\\n     * @dev \\u6b63\\u786e\\u4f7f\\u7528\\u5230 chainlink \\u7ef4\\u62a4\\u5408\\u7ea6\\u5b9a\\u65f6\\u4efb\\u52a1-- \\u662f\\u5426\\u89e6\\u53d1\\u4f18\\u80dc\\u8005\\n     * 1 : \\u65f6\\u95f4\\u95f4\\u9694\\u5904\\u7406\\u65b9\\u5f0f\\n     * 2 \\uff1a\\u5408\\u7ea6\\u7cfb\\u7edf\\u4e2d\\u81f3\\u5c11\\u6709\\u4e00\\u4f4d\\u73a9\\u5bb6\\u5e76\\u4e14\\u6709 eth\\n     * 3 \\uff1a \\u8ba2\\u9605\\u4e2d\\u6ce8\\u5165\\u4e86 link\\u8d44\\u91d1\\n     * 4 \\uff1a \\u6211\\u4eec\\u5408\\u7ea6\\u5956\\u6c60\\u5e94\\u8be5\\u662f\\u5904\\u4e8e\\u5f00\\u542f\\u72b6\\u6001\\n     */\\n    function checkUpkeep(\\n        bytes memory /* checkData */\\n    ) public view override returns (bool upkeepNeeded, bytes memory /* performData */) {\\n        // We don't use the checkData in this example. The checkData is defined when the Upkeep was registered.\\n        bool isOpen = (RaffleState.OPEN == s_raffleState);\\n        bool timePassed = (block.timestamp - s_lastTimeStamp) > i_interval;\\n        bool hasPlayers = (s_players.length > 0);\\n        bool hasBalane = address(this).balance > 0;\\n        upkeepNeeded = (isOpen && timePassed && hasBalane && hasPlayers);\\n    }\\n\\n    function getEntranceFee() public view returns (uint256) {\\n        return i_entranceFee;\\n    }\\n\\n    function getPlayer(uint256 index) public view returns (address) {\\n        return s_players[index];\\n    }\\n\\n    function getRecentWinter() public view returns (address) {\\n        return s_recentWinter;\\n    }\\n\\n    function getRaffleState() public view returns (RaffleState) {\\n        return s_raffleState;\\n    }\\n\\n    // \\u5e38\\u91cf\\u8bfb\\u53d6 \\u7528 prue\\u5173\\u952e\\u5b57\\n    function getNumWords() public pure returns (uint32) {\\n        return NUM_WORDS;\\n    }\\n\\n    function getRequestConfirmatison() public pure returns (uint256) {\\n        return REQUEST_CONFIRMATIONS;\\n    }\\n\\n    function getNumberOfPlayers() public view returns (uint256) {\\n        return s_players.length;\\n    }\\n\\n    function getLastTimeStamp() public view returns (uint256) {\\n        return s_lastTimeStamp;\\n    }\\n\\n    function getInterval() public view returns (uint256) {\\n        return i_interval;\\n    }\\n}\\n\",\"keccak256\":\"0x5e92328299e1d3c7c1dabc35936bd9595f4bc75e99d4717a2e14fe769db4138b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":253,"contract":"contracts/Raffle.sol:Raffle","label":"s_players","offset":0,"slot":"0","type":"t_array(t_address_payable)dyn_storage"},{"astId":255,"contract":"contracts/Raffle.sol:Raffle","label":"s_recentWinter","offset":0,"slot":"1","type":"t_address"},{"astId":258,"contract":"contracts/Raffle.sol:Raffle","label":"i_vrfCoordinator","offset":0,"slot":"2","type":"t_contract(VRFCoordinatorV2Interface)221"},{"astId":272,"contract":"contracts/Raffle.sol:Raffle","label":"s_state","offset":0,"slot":"3","type":"t_uint256"},{"astId":275,"contract":"contracts/Raffle.sol:Raffle","label":"s_raffleState","offset":0,"slot":"4","type":"t_enum(RaffleState)248"},{"astId":277,"contract":"contracts/Raffle.sol:Raffle","label":"s_lastTimeStamp","offset":0,"slot":"5","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_contract(VRFCoordinatorV2Interface)221":{"encoding":"inplace","label":"contract VRFCoordinatorV2Interface","numberOfBytes":"20"},"t_enum(RaffleState)248":{"encoding":"inplace","label":"enum Raffle.RaffleState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}